[{"path":"/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute opening issues (including questions, bugs, feature requests), updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience fluency, contribution history, social status, age, gender identity expression, sexual orientation, visible invisible disability, personal appearance, body size, ethnic racial identity perception, cultural religious background identity. Examples unacceptable behavior participants include use sexual language imagery, derogatory derisive comments, personal attacks, trolling, public private harassment insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, issues, contributions inconsistent Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances behavior inconsistent Code Conduct may reported opening issue contacting one project maintainers. Code Conduct adapted (changes) Contributor Covenant, version 1.0.0, available https://www.contributor-covenant.org/version/1/0/0/code--conduct.html","code":""},{"path":"/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to gggda development","title":"Contributing to gggda development","text":"goal guide help contributors gggda plan contributions navigate process. sections cover different types contributions, usually increasing degrees proposed change. Note gggda released Contributor Code Conduct. contributing, agree terms. guide copied ordr, loosely adapted contributing guides ggplot2 ropensci. questions suggestions guide, please feel free contact package maintainer.","code":""},{"path":"/CONTRIBUTING.html","id":"editor","dir":"","previous_headings":"","what":"Editor","title":"Contributing to gggda development","text":"Small edits comments, documentation, non-code files may made using GitHub file editor. edit roxygen2 documentation, make changes source file R/<topic>.r, line begins #', rather documentation file man/<topic>.Rd. guidance roxygen2 documentation, see chapter online book R packages.","code":""},{"path":"/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contributing to gggda development","text":"Questions, possible bugs, feature requests, open-ended issues may raised issues GitHub. cases, issue consist two sections: description issue, reproducible example . reproducible example attach packages, include data, execute code: Attach relevant packages top example. Use small data set can conveniently get illustrates issue. data set, best way include example re-create using data.frame() constructor function. Another way follows: Execute dput(data) R, data data set. Copy output. Paste example package attachments. Use lines steps code feasible illustrate issue. Add comments key steps. guidance reproducible examples, see vignette reprex package.","code":""},{"path":"/CONTRIBUTING.html","id":"pull-requests","dir":"","previous_headings":"","what":"Pull requests","title":"Contributing to gggda development","text":"Bug fixes, feature upgrades, substantive, self-contained changes may contributed via pull request. Unless previously discussed maintainer, please follow steps: Fork home repository (corybrunson/gggda). Create new (local) branch make changes. appropriate, update documentation branch run functionality checks (e.g. using devtools package). Push branch fork open pull request home repository. maintainer(s), discuss (necessary) update pull request accepted decided . latter case, clear consistent reason provided maintainer(s). guidance pull request process, see contributing guidelines ggplot2.","code":""},{"path":"/articles/gggda.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Visualizing Multivariate Data in {ggplot2}","text":"{gggda} package mostly standard-issue extension {ggplot2}: consists ggprotos coordinate system (“coord”) several statistical transformations (“stat”), geographic constructions (“geom”) almost exclusively use standard aesthetic mappings recognizable parameters defaults. coords, stats, geoms implement variety tools used multivariate data analysis. design, tools implemented {ggplot2} extensions reinvented —, least, ’re meant ! example, {ggdensity} package provides plot layers quantile-based density estimates contours, extending native {ggplot2} layers level-based density visualizations, users encouraged use tandem {gggda}. result, though, included package may seem somewhat arbitrary. said, plot layers provided {gggda} implement methods emerged two distinct threads, vignette consider turn. brief caution: code uses sort_by() function introduced R version 4.4.0; version yet installed, invisible code chunk run defines scratch.","code":"library(gggda) #> Loading required package: ggplot2 theme_set(theme_bw())"},{"path":"/articles/gggda.html","id":"data","dir":"Articles","previous_headings":"Introduction","what":"Data","title":"Visualizing Multivariate Data in {ggplot2}","text":"motivate illustrate tools, let’s investigate USJudgeRatings data set included basic R installation. data obtained 1977 New Haven Register contain several lawyers’ evaluations 43 Superior Court1 judges based, infer (found journal article citation able access newspaper edition), number interactions . variables include (standardized) number interactions, ratings 10 criteria ranging judicial integrity physical ability, final rating retention worthiness; ratings use 10-point scale. ratings sample judges: convenience, reformat data additional column name judge:","code":"print(USJudgeRatings[sample(nrow(USJudgeRatings), 6L, replace = FALSE), ]) #>                CONT INTG DMNR DILG CFMG DECI PREP FAMI ORAL WRIT PHYS RTEN #> MIGNONE,A.F.    6.6  7.4  6.2  6.2  5.4  5.7  5.8  5.9  5.2  5.8  4.7  5.2 #> DEVITA,H.J.     6.5  8.0  7.6  7.2  7.0  7.1  6.9  7.0  7.0  7.1  6.9  7.2 #> SPONZO,M.J.     6.9  8.3  8.0  8.1  7.9  7.9  7.9  7.7  7.6  7.7  8.1  8.0 #> STAPLETON,J.F.  6.5  8.2  7.7  7.8  7.6  7.7  7.7  7.7  7.5  7.6  8.5  7.7 #> SADEN.G.A.      6.6  7.4  6.9  8.4  8.0  7.9  8.2  8.4  7.7  7.9  8.4  7.5 #> BERDON,R.I.     6.8  8.8  8.5  8.8  8.3  8.5  8.7  8.7  8.4  8.5  8.8  8.7 USJudgeRatings %>%    tibble::rownames_to_column(var = \"NAME\") ->   judge_ratings head(judge_ratings) #>             NAME CONT INTG DMNR DILG CFMG DECI PREP FAMI ORAL WRIT PHYS RTEN #> 1  AARONSON,L.H.  5.7  7.9  7.7  7.3  7.1  7.4  7.1  7.1  7.1  7.0  8.3  7.8 #> 2 ALEXANDER,J.M.  6.8  8.9  8.8  8.5  7.8  8.1  8.0  8.0  7.8  7.9  8.5  8.7 #> 3 ARMENTANO,A.J.  7.2  8.1  7.8  7.8  7.5  7.6  7.5  7.5  7.3  7.4  7.9  7.8 #> 4    BERDON,R.I.  6.8  8.8  8.5  8.8  8.3  8.5  8.7  8.7  8.4  8.5  8.8  8.7 #> 5   BRACKEN,J.J.  7.3  6.4  4.3  6.5  6.0  6.2  5.7  5.7  5.1  5.3  5.5  4.8 #> 6     BURNS,E.B.  6.2  8.8  8.7  8.5  7.9  8.0  8.1  8.0  8.0  8.0  8.6  8.6"},{"path":"/articles/gggda.html","id":"multivariate-summaries","dir":"Articles","previous_headings":"","what":"Multivariate summaries","title":"Visualizing Multivariate Data in {ggplot2}","text":"first set methods extension univariate summaries multivariate, usually bivariate, data. example, univariate data natural ranking value: Arrange cases order variable value, rank case position order: ’s obvious analog bivariate data: Suppose want rank judges well maintain legitimacy court. might implicate two ratings data particular, integrity promptness decisions:  ratings correlated, several individual judges rated significantly highly one criterion , clear “core” judges received average ratings . next section ’ll see ratings might combined aggregate; now, ’ll consider rank judges values ratings typicality “averageness”: score, middling judges ranked highly outlying judges ranked lowly. measure might useful identifying idiosyncratic judges recruitment consensus working groups even whose rankings re-evaluated. Visually, property can captured sequentially “peeling” outer layers point cloud giving layer rank. common way probably via convex hulls:  plot identifies Judges Saden Driscoll, example, outliers, despite average just--average ratings criteria. middling judges’ names harder read, can extract assignments directly examine peripheral core hulls: Judges Aaronson, Armentano, Stapleton constitute innermost hull, density core makes difficult build intuition stratification. can, example, check whether peripherality respect nested hulls systematically related overall retention rating:  fewer data hull yield narrower boxplots, evident upward downward trend. peeling data outside inward way stratify centrality. Another approach called data depth, based family notions global depth distinct local notions density. One famous deployments data depth “bag--bolster plot” comprising “bag” delineated depth contour “fence” expanding bag outward depth median. box--whisker plot, markers outside fence identify outliers. bag--bolster plot , used trial error customize fraction contained bag scale factor fence, add text labels judges outermost innermost hulls:  data, two stratifications broadly consistent. However, data seem greater skew toward lower values periphery core, resulting Judges Naruk Rubinow lying well within fence Judges Cohen Mignone lie near boundary, despite four belonging outermost hull.","code":"judge_ratings %>%    subset(select = c(NAME, RTEN)) %>%    sort_by(~ list(-RTEN)) %>%    transform(RANK = seq(nrow(judge_ratings))) %>%    head() #>              NAME RTEN RANK #> 30   RUBINOW,J.E.  9.2    1 #> 7   CALLAHAN,R.J.  9.0    2 #> 26     NARUK,H.J.  9.0    3 #> 9       DALY,J.J.  8.8    4 #> 34   SHEA,J.F.JR.  8.8    5 #> 2  ALEXANDER,J.M.  8.7    6 judge_plot <- ggplot(judge_ratings, aes(x = INTG, y = DECI, label = NAME)) judge_plot +   geom_text(aes(label = NAME), size = 3) judge_plot +   geom_text(size = 3, hjust = \"outward\", vjust = \"outward\") +   stat_peel(num = Inf, color = \"black\", fill = \"transparent\") #> Warning: The following aesthetics were dropped during statistical transformation: label. #> ℹ This can happen when ggplot fails to infer the correct grouping structure in #>   the data. #> ℹ Did you forget to specify a `group` aesthetic or to convert a numerical #>   variable into a factor? judge_ratings %>%    subset(select = c(INTG, DECI)) %>%    peel_hulls(num = Inf) %>%    as.data.frame() %>%    merge(     transform(judge_ratings, i = seq(nrow(judge_ratings))),     by = \"i\"   ) %>%    subset(select = -c(i, x, y, prop)) %>%    sort_by(~ hull + NAME) ->   judge_hulls judge_hulls %>%    subset(subset = hull %in% range(hull)) #>    hull           NAME CONT INTG DMNR DILG CFMG DECI PREP FAMI ORAL WRIT PHYS #> 8     1     COHEN,S.S.  7.0  5.9  4.9  5.1  5.4  5.9  4.8  5.1  4.7  4.9  6.8 #> 13    1  DRISCOLL,P.J.  6.7  8.6  8.2  6.8  6.9  6.6  7.1  7.3  7.2  7.2  8.1 #> 23    1   MIGNONE,A.F.  6.6  7.4  6.2  6.2  5.4  5.7  5.8  5.9  5.2  5.8  4.7 #> 26    1     NARUK,H.J.  7.8  8.9  8.7  8.9  8.7  8.8  8.9  9.0  8.8  8.9  9.0 #> 30    1   RUBINOW,J.E.  7.1  9.2  9.0  9.0  8.4  8.6  9.1  9.1  8.9  9.0  8.9 #> 31    1     SADEN.G.A.  6.6  7.4  6.9  8.4  8.0  7.9  8.2  8.4  7.7  7.9  8.4 #> 1     7  AARONSON,L.H.  5.7  7.9  7.7  7.3  7.1  7.4  7.1  7.1  7.1  7.0  8.3 #> 3     7 ARMENTANO,A.J.  7.2  8.1  7.8  7.8  7.5  7.6  7.5  7.5  7.3  7.4  7.9 #> 38    7 STAPLETON,J.F.  6.5  8.2  7.7  7.8  7.6  7.7  7.7  7.7  7.5  7.6  8.5 #>    RTEN #> 8   5.0 #> 13  7.7 #> 23  5.2 #> 26  9.0 #> 30  9.2 #> 31  7.5 #> 1   7.8 #> 3   7.8 #> 38  7.7 judge_hulls %>%    transform(hull = factor(hull, levels = seq(max(hull)))) %>%    ggplot(aes(x = hull, y = RTEN)) +   geom_boxplot() judge_plot +   stat_bagplot(fraction = 1/3, coef = 3) +   geom_text(     data = subset(judge_hulls, hull %in% range(hull)),     size = 3, hjust = \"outward\", vjust = \"outward\"   ) #> Warning: The following aesthetics were dropped during statistical transformation: label. #> ℹ This can happen when ggplot fails to infer the correct grouping structure in #>   the data. #> ℹ Did you forget to specify a `group` aesthetic or to convert a numerical #>   variable into a factor?"},{"path":"/articles/gggda.html","id":"ordination-and-biplots","dir":"Articles","previous_headings":"","what":"Ordination and biplots","title":"Visualizing Multivariate Data in {ggplot2}","text":"second set methods enables analysis many variables . ordination models typically use linear algebra obtain sequence artificial coordinates, captures desired behavior adjusting previous. popular ordination model, principal components analysis, principal components (PCs) account maximum amount inertia, multidimensional variance successive residual subspace. PCA often applied heterogeneous data, requires variables rescaled common variance. case, however, criterion rated scale, simplifying assumption distributions (specifically variances) equivalent population plausible. technique dimension reduction, PCA works best variables highly dependent—necessarily pairwise correlated, low-dimensional subspace coordinatized first PCs contains large share inertia. componentwise variance cumulative inertia reported summary. also examine variable loadings onto PCs, allow us interpret PCs latent variables (factor analysis, though theoretical justification weaker meanings less straightforward). PCA summary shows vast majority variance (92%) already lies single dimension, along first PC, roughly half remainder (4%) lies along second; 96% lies within plane first two PCs therefore visualized plot using axes. loadings suggest ratings (diligence, soundness oral written rulings) align closely PC1 (integrity demeanor) PC2, others (management case flow, promptness decisions, physical ability) similarly aligned . insights can efficiently visualized plotting cases (judges) variables (criteria) plane defined first two PCs. quality resulting biplot depends proportion variance along PCs. biplot , cases represented circular markers variables arrows, using geometric construction provided {gggda}. aspect ratio fixed 1 avoid misrepresenting inertia.  plot makes clear singular importance PC1: Indeed, rating scales load positively onto , interpreted dimension overall quality. also clear criteria tightly correlated two roughly orthogonal groups, though groups don’t line perfectly two PCs. (rotation might applied improve “simple structure” PCA, beyond scope introduction.) However, plot limited several ways: can’t tell marker represents judge arrow represents criterion, quiver arrows quite small due different scales cases variables. code chunk , pre-process scores loadings data frames additional variables use variables improve annotations. (Notice clever double-use NAME cases variables, allows us distribute aesthetic label = NAME across layers.) also remove gridlines theme since PCs meaningful, use new coordinate system expands plotting window square holding aspect ratio fixed. Finally, rescale variables distinguishable scale cases add additional axis legends new scale.2  arrows communicate directions magnitudes rating’s associations two PCs. example, contribution demeanor separating judges like Saden one side overall quality axis (PC1) Driscoll least half integrity. However, information impressionistic, plot reveals little else. alternative geometric construction allows easier interpretation: calibrated axes—basically, lines containing vectors tick marks regular multiples .3  Axes obviate need rescaling provide space compare variables’ contributions. can now see plot every rating demenear integrity contributes similarly spread, terms strength well direction. Yet within similarity clusters: Soundness oral written rulings closely aligned, management case flow promptness decisions, diligence, legal familiarity, trial preparation essentially indistinguishable. Axes also provide natural way interpolate additional variables onto existing biplot, much additional cases can : omitted worthiness retention ratings analysis less objective criterion, can regress values first two PCs get sense relates picture paint: Retention worthiness depends importantly PCs, though strongly first, indicating closely related first “overall quality” dimension second associated demeanor integrity—though associations positive. superimpose ruler effect biplot offset point cloud using referent parameter, accepts data format data pre-processes way:  perhaps surprising demeanor integrity exert significant (counterclockwise) pull retention worthiness relation first PC, given larger number criteria whose ratings tug opposite direction. effect positioning Judge Driscoll similarly Judge Saden, despite Saden’s higher rating every criterion.4 Indeed, Judge Driscoll rated slightly retention-worthy:","code":"judge_ratings %>%    subset(select = -c(NAME, CONT, RTEN)) %>%    princomp(cor = FALSE) ->   judge_pca summary(judge_pca) #> Importance of components: #>                           Comp.1     Comp.2     Comp.3      Comp.4      Comp.5 #> Standard deviation     2.7951637 0.60340001 0.46035803 0.272421916 0.170365235 #> Proportion of Variance 0.9158885 0.04268141 0.02484389 0.008699859 0.003402437 #> Cumulative Proportion  0.9158885 0.95856994 0.98341383 0.992113689 0.995516126 #>                             Comp.6      Comp.7       Comp.8       Comp.9 #> Standard deviation     0.121735488 0.111429240 0.0726587640 0.0616838629 #> Proportion of Variance 0.001737251 0.001455548 0.0006188767 0.0004460374 #> Cumulative Proportion  0.997253377 0.998708925 0.9993278015 0.9997738389 #>                             Comp.10 #> Standard deviation     0.0439232932 #> Proportion of Variance 0.0002261611 #> Cumulative Proportion  1.0000000000 print(judge_pca$loadings) #>  #> Loadings: #>      Comp.1 Comp.2 Comp.3 Comp.4 Comp.5 Comp.6 Comp.7 Comp.8 Comp.9 Comp.10 #> INTG  0.250  0.447  0.135         0.464  0.650  0.157  0.236                #> DMNR  0.370  0.727 -0.171  0.214 -0.295 -0.385               -0.132         #> DILG  0.308 -0.156  0.301  0.335  0.590 -0.393  0.145 -0.379                #> CFMG  0.292 -0.277         0.509 -0.155  0.342 -0.614        -0.241         #> DECI  0.272 -0.281         0.387 -0.391  0.115  0.685  0.201  0.144         #> PREP  0.332 -0.152  0.220 -0.146        -0.328 -0.252  0.638  0.312  0.336  #> FAMI  0.328 -0.159  0.224 -0.491                       0.160 -0.511 -0.525  #> ORAL  0.356               -0.234 -0.135  0.133 -0.163 -0.371  0.701 -0.355  #> WRIT  0.337         0.152 -0.306 -0.221  0.137        -0.433 -0.206  0.683  #> PHYS  0.296 -0.209 -0.860 -0.149  0.297                                     #>  #>                Comp.1 Comp.2 Comp.3 Comp.4 Comp.5 Comp.6 Comp.7 Comp.8 Comp.9 #> SS loadings       1.0    1.0    1.0    1.0    1.0    1.0    1.0    1.0    1.0 #> Proportion Var    0.1    0.1    0.1    0.1    0.1    0.1    0.1    0.1    0.1 #> Cumulative Var    0.1    0.2    0.3    0.4    0.5    0.6    0.7    0.8    0.9 #>                Comp.10 #> SS loadings        1.0 #> Proportion Var     0.1 #> Cumulative Var     1.0 ggplot(mapping = aes(x = Comp.1, y = Comp.2)) +   geom_point(data = judge_pca$scores) +   geom_vector(data = unclass(judge_pca$loadings), color = \"#007a3d\") +   coord_equal() judge_pca$scores %>%    as.data.frame() %>%    transform(NAME = judge_ratings$NAME) ->   judge_scores judge_pca$loadings %>%    unclass() %>% as.data.frame() %>%    tibble::rownames_to_column(var = \"NAME\") ->   judge_loadings ggplot(mapping = aes(x = Comp.1, y = Comp.2, label = NAME)) +   geom_text(data = judge_scores, size = 3) +   geom_vector(data = judge_loadings, color = \"#007a3d\",               stat = \"scale\", mult = 5) +   theme(panel.grid = element_blank()) +   coord_square() +   scale_x_continuous(sec.axis = sec_axis(~ . / 5)) +   scale_y_continuous(sec.axis = sec_axis(~ . / 5)) +   expand_limits(x = c(-8, 6)) ggplot(mapping = aes(x = Comp.1, y = Comp.2, label = NAME)) +   geom_axis(data = judge_loadings, color = \"#007a3d\") +   geom_text(data = judge_scores, size = 3) +   theme(panel.grid = element_blank()) +   coord_square() +   expand_limits(x = c(-8, 6)) judge_ratings %>%    subset(select = RTEN) %>%    cbind(judge_scores) %>%    lm(formula = RTEN ~ Comp.1 + Comp.2) ->   judge_lm summary(judge_lm) #>  #> Call: #> lm(formula = RTEN ~ Comp.1 + Comp.2, data = .) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -0.51408 -0.08375 -0.01568  0.09951  0.35963  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept) 7.602326   0.024394 311.652  < 2e-16 *** #> Comp.1      0.383507   0.008727  43.944  < 2e-16 *** #> Comp.2      0.174093   0.040427   4.306 0.000105 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.16 on 40 degrees of freedom #> Multiple R-squared:  0.9799, Adjusted R-squared:  0.9789  #> F-statistic: 974.8 on 2 and 40 DF,  p-value: < 2.2e-16 judge_lm %>%    coefficients() %>%    t() %>% as.data.frame() %>%    transform(NAME = \"RTEN\") ->   judge_coef ggplot(mapping = aes(x = Comp.1, y = Comp.2, label = NAME)) +   geom_axis(data = judge_loadings, color = \"#007a3d\") +   geom_text(data = judge_scores, size = 3) +   stat_rule(data = judge_coef, referent = judge_scores, color = \"#ce1126\") +   theme(panel.grid = element_blank()) +   coord_square() +   expand_limits(x = c(-8, 6)) judge_ratings %>%    subset(subset = grepl(\"SADEN|DRISCOLL\", NAME)) #>             NAME CONT INTG DMNR DILG CFMG DECI PREP FAMI ORAL WRIT PHYS RTEN #> 13 DRISCOLL,P.J.  6.7  8.6  8.2  6.8  6.9  6.6  7.1  7.3  7.2  7.2  8.1  7.7 #> 31    SADEN.G.A.  6.6  7.4  6.9  8.4  8.0  7.9  8.2  8.4  7.7  7.9  8.4  7.5"},{"path":"/articles/gggda.html","id":"outroduction","dir":"Articles","previous_headings":"","what":"Outroduction","title":"Visualizing Multivariate Data in {ggplot2}","text":"closing, elements practice worth making explicit: First, multivariate data visualization component multivariate data analysis, standalone option . Visualizations can elicit patterns substitute rigorously confirming . Second, data may multivariate different ways call different analytic graphical approaches. multivariate data may involve incommensurate variables unsuited unscaled PCA, example. Finally, multivariate graphics highly versatile. feature perspective communication double-edge respect design analysis toward specific task (question, hypothesis, objective): outset, analyst must choose (say pre-register, say ) settings appropriate data task, analysis progresses must balance adaptability revealed patterns rigor toward theory behind task original analysis plan. larger {ggplot2} extension family provides several additional tools multivariate data visualization facilitate complicate efforts.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jason Cory Brunson. Author, maintainer. Emily Paul. Contributor. John Gracey. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Brunson J, Gracey J (2025). gggda: 'ggplot2' Extension Geometric Data Analysis. R package version 0.1.1, https://corybrunson.github.io/gggda/, https://github.com/corybrunson/gggda.","code":"@Manual{,   title = {gggda: A 'ggplot2' Extension for Geometric Data Analysis},   author = {Jason Cory Brunson and John Gracey},   year = {2025},   note = {R package version 0.1.1, https://corybrunson.github.io/gggda/},   url = {https://github.com/corybrunson/gggda}, }"},{"path":"/index.html","id":"gggda","dir":"","previous_headings":"","what":"A ggplot2 Extension for Geometric Data Analysis","title":"A ggplot2 Extension for Geometric Data Analysis","text":"{gggda} extends {ggplot2} coordinate systems, statistical transformations, geometric constructions useful analysis visualization multivariate data, including bivariate generalizations univariate tools tools designed geometric data analysis ordination. spun designed interoperate {ordr}. However, two packages remain completely harmonized.","code":""},{"path":[]},{"path":"/index.html","id":"installation","dir":"","previous_headings":"usage","what":"installation","title":"A ggplot2 Extension for Geometric Data Analysis","text":"{gggda} yet CRAN can installed follows using {pak}:","code":"pak::pkg_install(\"corybrunson/gggda\")"},{"path":"/index.html","id":"illustration","dir":"","previous_headings":"usage","what":"illustration","title":"A ggplot2 Extension for Geometric Data Analysis","text":"Use new coordinate system fix aspect ratio plotting window well coordinates:   new statistical transformations provide new ways analyzing bivariate data, example depth stat deploys {ddalpha} package mimics density stat pairing contour geom:  Several new geometric constructions wide range uses, including biplots, two-dimensional errorbars underused example:","code":"# rectangular window (custom aspect ratio) ggplot(mpg, aes(x = displ, y = hwy)) +   coord_rect(ratio = .1, window_ratio = 1/2) +   geom_point() # square window (unit aspect ratio) ggplot(mpg, aes(x = cty, y = hwy)) +   coord_square(xlim = c(0, NA), ylim = c(0, NA)) +   geom_point() # depth medians and quartiles contours by group ggplot(mpg, aes(displ, cty, color = drv, fill = drv)) +   stat_depth(bins = 4) +   stat_center(fun.ord = depth_median) # centroids with 2-standard deviation bars for both variables ggplot(mpg, aes(displ, cty, color = factor(cyl))) +   geom_point() +   geom_pointranges(fun.data = mean_sdl)"},{"path":[]},{"path":"/index.html","id":"contribute","dir":"","previous_headings":"acknowledgments","what":"contribute","title":"A ggplot2 Extension for Geometric Data Analysis","text":"feedback package welcome! encounter confusion errors, create issue, minimal reproducible example feasible. requests, suggestions, implementations new features, feel free create issue submit pull request. Please try follow contributing guidelines respect Code Conduct.","code":""},{"path":"/index.html","id":"resources","dir":"","previous_headings":"acknowledgments","what":"resources","title":"A ggplot2 Extension for Geometric Data Analysis","text":"Development package benefitted use equipment support colleagues UConn Health UF Health.","code":""},{"path":"/reference/aes-coord.html","id":null,"dir":"Reference","previous_headings":"","what":"Multidimensional coordinate mappings — aes-coord","title":"Multidimensional coordinate mappings — aes-coord","text":"Allow stat layers receive sequence positional variables rather x y.","code":""},{"path":"/reference/aes-coord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multidimensional coordinate mappings — aes-coord","text":"","code":"aes_coord(.data, prefix)  get_aes_coord(data)  aes_c(...)"},{"path":"/reference/aes-coord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multidimensional coordinate mappings — aes-coord","text":".data, data data frame. .data stands data passed ggplot2::ggplot(), data expected pre-processed passed Stat*$compute_*() function. prefix regular expression used identify coordinate columns .data. ... objects concatenated.  NULL entries     dropped method dispatch unless beginning     argument list.","code":""},{"path":"/reference/aes-coord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multidimensional coordinate mappings — aes-coord","text":"list class uneval. Components list either quosures constants.","code":""},{"path":"/reference/aes-coord.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multidimensional coordinate mappings — aes-coord","text":"functions coordinate (pun intended) use two positional variables plot layers. Pass multidimensional coordinates stat via mapping = aes_coord(...) reconcile recovered coordinates x y (overridden present) Stat*$compute_*(); see StatChull source code example. Use aes_c() concatenate aesthetic mappings.","code":""},{"path":[]},{"path":"/reference/coord_rect.html","id":null,"dir":"Reference","previous_headings":"","what":"Cartesian coordinates and plotting window with fixed aspect ratios — coord_rect","title":"Cartesian coordinates and plotting window with fixed aspect ratios — coord_rect","text":"Geometric data analysis often requires coordinates lie scale. coordinate system CoordRect, alias CoordSquare, provides control coordinate window aspect ratios.","code":""},{"path":"/reference/coord_rect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cartesian coordinates and plotting window with fixed aspect ratios — coord_rect","text":"","code":"coord_rect(   ratio = 1,   window_ratio = ratio,   xlim = NULL,   ylim = NULL,   expand = TRUE,   clip = \"on\" )"},{"path":"/reference/coord_rect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cartesian coordinates and plotting window with fixed aspect ratios — coord_rect","text":"ratio aspect ratio, expressed y / x window_ratio aspect ratio plotting window xlim, ylim Limits x y axes. expand TRUE, default, adds small expansion factor limits ensure data axes overlap. FALSE, limits taken exactly data xlim/ylim. clip drawing clipped extent plot panel? setting \"\" (default) means yes, setting \"\" means . cases, default \"\" changed, setting clip = \"\" can cause unexpected results. allows drawing data points anywhere plot, including plot margins. limits set via xlim ylim data points fall outside limits, data points may show places axes, legend, plot title, plot margins.","code":""},{"path":"/reference/coord_rect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cartesian coordinates and plotting window with fixed aspect ratios — coord_rect","text":"Coord ggproto object.","code":""},{"path":"/reference/coord_rect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cartesian coordinates and plotting window with fixed aspect ratios — coord_rect","text":"","code":"# ensures that the resolutions of the axes and the dimensions of the plotting # window respect the specified aspect ratios p <- ggplot(mtcars, aes(mpg, hp/10)) + geom_point() p + coord_rect(ratio = 1)  p + coord_rect(ratio = 1, window_ratio = 2)  p + coord_rect(ratio = 1, window_ratio = 1/2)  p + coord_rect(ratio = 5)  p + coord_rect(ratio = 1/5)  p + coord_rect(xlim = c(15, 30))  p + coord_rect(ylim = c(15, 30))   # square (even excluding some geometric constructions) p + coord_square(xlim = c(0, 30), ylim = c(20, 40))"},{"path":"/reference/depth_median.html","id":null,"dir":"Reference","previous_headings":"","what":"Depth median — depth_median","title":"Depth median — depth_median","text":"Compute depth median data set.","code":""},{"path":"/reference/depth_median.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Depth median — depth_median","text":"","code":"depth_median(x, notion = \"zonoid\", ...)"},{"path":"/reference/depth_median.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Depth median — depth_median","text":"x Matrix data whose depth median calculated; see ddalpha::depth.(). notion name depth notion (shall also work user-defined depth function named \"depth.<name>\"). ... Additional parameters passed depth functions.","code":""},{"path":"/reference/depth_median.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Depth median — depth_median","text":"one-row matrix depth median coordinates.","code":""},{"path":"/reference/depth_median.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Depth median — depth_median","text":"function called internally stat_bagplot() can passed stat_center() also exported directly data analysis.","code":""},{"path":"/reference/depth_median.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Depth median — depth_median","text":"","code":"# sample median iris %>%    subset(select = -Species) %>%    depth_median() #> Sepal.Length  Sepal.Width Petal.Length  Petal.Width  #>          6.0          2.9          4.5          1.5  # groupwise medians iris %>%    split(~ Species) %>%    lapply(subset, select = -Species) %>%    lapply(depth_median) %>%    simplify2array() %>% t() %>% as.data.frame() #>            Sepal.Length Sepal.Width Petal.Length Petal.Width #> setosa              5.0         3.4          1.5         0.2 #> versicolor          5.7         2.8          4.1         1.3 #> virginica           7.1         3.0          5.9         2.1"},{"path":"/reference/draw-key.html","id":null,"dir":"Reference","previous_headings":"","what":"Key drawing functions for bivariate intervals. — draw-key","title":"Key drawing functions for bivariate intervals. — draw-key","text":"key drawing functions supplement built ggplot2 legend glyphs suitable bivariate line-ranges point-ranges.","code":""},{"path":"/reference/draw-key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Key drawing functions for bivariate intervals. — draw-key","text":"","code":"draw_key_line(data, params, size)  draw_key_crosslines(data, params, size)  draw_key_crosspoint(data, params, size)"},{"path":"/reference/draw-key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Key drawing functions for bivariate intervals. — draw-key","text":"data single row data frame containing scaled aesthetics display key params list additional parameters supplied geom. size Width height key mm.","code":""},{"path":"/reference/draw-key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Key drawing functions for bivariate intervals. — draw-key","text":"grid grob.","code":""},{"path":"/reference/draw-key.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Key drawing functions for bivariate intervals. — draw-key","text":"draw_key_line() horizontal counterpart ggplot2::draw_key_vline(). draw_key_crosslines() superimposes two keys, draw_key_crosspoint() additionally superimposes oversized ggplot2::draw_key_point().","code":""},{"path":[]},{"path":"/reference/geom_axis.html","id":null,"dir":"Reference","previous_headings":"","what":"Axes through or offset from the origin — geom_axis","title":"Axes through or offset from the origin — geom_axis","text":"geom_axis() renders lines orthogonally translated origin position case variable.","code":""},{"path":"/reference/geom_axis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axes through or offset from the origin — geom_axis","text":"","code":"geom_axis(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   axis_labels = TRUE,   axis_ticks = TRUE,   axis_text = TRUE,   by = NULL,   num = NULL,   tick_length = 0.025,   text_dodge = 0.03,   label_dodge = 0.03,   ...,   axis.colour = NULL,   axis.color = NULL,   axis.alpha = NULL,   label.angle = 0,   label.colour = NULL,   label.color = NULL,   label.alpha = NULL,   tick.linewidth = 0.25,   tick.colour = NULL,   tick.color = NULL,   tick.alpha = NULL,   text.size = 2.6,   text.angle = 0,   text.hjust = 0.5,   text.vjust = 0.5,   text.family = NULL,   text.fontface = NULL,   text.colour = NULL,   text.color = NULL,   text.alpha = NULL,   parse = FALSE,   check_overlap = FALSE,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"/reference/geom_axis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axes through or offset from the origin — geom_axis","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. axis_labels, axis_ticks, axis_text Logical; whether include labels, tick marks, text value marks along axes. , num Intervals elements number elements; specify one. tick_length Numeric; length tick marks, proportion minimum plot width height. text_dodge Numeric; orthogonal distance tick mark text axis, proportion minimum plot width height. label_dodge Numeric; orthogonal distance axis label axis, proportion minimum plot width height. ... Additional arguments passed ggplot2::layer(). axis.colour, axis.color, axis.alpha Default aesthetics axes. Set NULL inherit data's aesthetics. label.angle, label.colour, label.color, label.alpha Default aesthetics labels. Set NULL inherit data's aesthetics. tick.linewidth, tick.colour, tick.color, tick.alpha Default aesthetics tick marks. Set NULL inherit data's aesthetics. text.size, text.angle, text.hjust, text.vjust, text.family, text.fontface, text.colour, text.color, text.alpha Default aesthetics tick mark labels. Set NULL inherit data's aesthetics. parse TRUE, labels parsed expressions displayed described ?plotmath. check_overlap TRUE, text overlaps previous text layer plotted. check_overlap happens draw time order data. Therefore data arranged label column calling geom_text(). Note argument supported geom_label(). na.rm Passed ggplot2::layer(). show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"/reference/geom_axis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axes through or offset from the origin — geom_axis","text":"ggproto layer.","code":""},{"path":"/reference/geom_axis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Axes through or offset from the origin — geom_axis","text":"Axes lines track values linear variables across plot. Multivariate scatterplots may include axes plotting dimensions, case plot may display fraction total variation data. Gower & Hand (1996) recommend using axes represent numerical variables biplots. Consequently, Gardner & le Roux (2002) refer Gower biplots. Axes positioned orthogonally origin ubiquitous feature scatterplots used recover variable values case markers (prediction) position new case markers variables (interpolation). orthogonal, two uses conflict, interpolative versus predictive axes must used appropriately.","code":""},{"path":"/reference/geom_axis.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Axes through or offset from the origin — geom_axis","text":"geom_axis() understands following aesthetics (required aesthetics bold): x y lower upper yintercept xintercept xend yend linetype linewidth size hjust vjust colour alpha label family fontface center, scale group","code":""},{"path":"/reference/geom_axis.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Axes through or offset from the origin — geom_axis","text":"Gower JC & Hand DJ (1996) Biplots. Chapman & Hall, ISBN: 0-412-71630-5. Gardner S, le Roux N (2002) \"Biplot Methodology Discriminant Analysis Based upon Robust Methods Principal Curves\". Classification, Clustering, Data Analysis: Recent Advances Applications: 169–176. https://link.springer.com/chapter/10.1007/978-3-642-56181-8_18","code":""},{"path":[]},{"path":"/reference/geom_axis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axes through or offset from the origin — geom_axis","text":"","code":"# stack loss gradient stackloss %>%    lm(formula = stack.loss ~ Air.Flow + Water.Temp + Acid.Conc.) %>%    coef() %>%    as.list() %>% as.data.frame() %>%    subset(select = c(Air.Flow, Water.Temp, Acid.Conc.)) ->   coef_data # gradient axis with respect to two predictors scale(stackloss, scale = FALSE) %>%    ggplot(aes(x = Acid.Conc., y = Air.Flow)) +   coord_square() +   geom_point(aes(size = stack.loss, alpha = sign(stack.loss))) +    scale_size_area() + scale_alpha_binned(breaks = c(-1, 0, 1)) +   geom_axis(data = coef_data)  # unlimited axes with window forcing stackloss_centered <- scale(stackloss, scale = FALSE) stackloss_centered %>%    ggplot(aes(x = Acid.Conc., y = Air.Flow)) +   coord_square() +   geom_point(aes(size = stack.loss, alpha = sign(stack.loss))) +    scale_size_area() + scale_alpha_binned(breaks = c(-1, 0, 1)) +   stat_rule(     geom = \"axis\", data = coef_data,     referent = stackloss_centered,     fun.lower = function(x) minpp(x, p = 1),     fun.upper = function(x) maxpp(x, p = 1),     fun.offset = function(x) minabspp(x, p = 1)   )  # NB: `geom_axis(stat = \"rule\")` would fail to pass positional aesthetics.  # eigen-decomposition of covariance matrix ability.cov$cov %>%    cov2cor() %>%    eigen() %>% getElement(\"vectors\") %>%    as.data.frame() %>%    transform(test = rownames(ability.cov$cov)) ->   ability_cor_eigen # test axes in best-approximation space ability_cor_eigen %>%    transform(E3 = ifelse(V3 > 0, \"rise\", \"fall\")) %>%    ggplot(aes(V1, V2, color = E3)) +   coord_square() +   geom_axis(aes(label = test), text.color = \"black\", text.alpha = .5) +   expand_limits(x = c(-1, 1), y = c(-1, 1))"},{"path":"/reference/geom_bagplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Bagplots — geom_bagplot","title":"Bagplots — geom_bagplot","text":"Render bagplots tagged data comprising medians, hulls, contours, outlier specifications.","code":""},{"path":"/reference/geom_bagplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bagplots — geom_bagplot","text":"","code":"geom_bagplot(   mapping = NULL,   data = NULL,   stat = \"bagplot\",   position = \"identity\",   ...,   bag.linewidth = sync(),   bag.linetype = sync(),   bag.colour = \"black\",   bag.color = NULL,   bag.fill = sync(),   bag.alpha = NA,   median.shape = 21L,   median.stroke = sync(),   median.size = 5,   median.colour = sync(),   median.color = NULL,   median.fill = \"white\",   median.alpha = NA,   fence.linewidth = 0.25,   fence.linetype = 0L,   fence.colour = sync(),   fence.color = NULL,   fence.fill = sync(),   fence.alpha = 0.25,   outlier.shape = sync(),   outlier.stroke = sync(),   outlier.size = sync(),   outlier.colour = sync(),   outlier.color = NULL,   outlier.fill = NA,   outlier.alpha = NA,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"/reference/geom_bagplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bagplots — geom_bagplot","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... Additional arguments passed ggplot2::layer(). bag.linetype, bag.linewidth, bag.colour, bag.color, bag.fill, bag.alpha Default aesthetics bags. Set sync() inherit data's aesthetics NULL use data's aesthetics. median.shape, median.stroke, median.size, median.colour, median.color, median.fill, median.alpha Default aesthetics medians. Set sync() inherit data's aesthetics NULL use data's aesthetics. fence.linetype, fence.linewidth, fence.colour, fence.color, fence.fill, fence.alpha Default aesthetics fences. Set sync() inherit data's aesthetics NULL use data's aesthetics. outlier.shape, outlier.stroke, outlier.size, outlier.colour, outlier.color, outlier.fill, outlier.alpha Default aesthetics outliers. Set sync() inherit data's aesthetics NULL use data's aesthetics. na.rm Passed ggplot2::layer(). show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"/reference/geom_bagplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bagplots — geom_bagplot","text":"ggproto layer.","code":""},{"path":"/reference/geom_bagplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bagplots — geom_bagplot","text":"geom_bagplot() designed pair stat_bagplot(), analogously pairing ggplot2::geom_boxplot() ggplot2::stat_boxplot(). optional components expensive compute setting, controlled parameters passed stat. Auxiliary aesthetics like median.colour available override auxiliary defaults, turn override standard defaults. Auxiliary defaults also take effect auxiliary aesthetics passed NULL, stat_bagplot() geom_bagplot() default behavior. Pass sync() (instead NULL, ggplot2::geom_boxplot()) synchronize auxiliary aesthetic standard counterpart. WARNING: trade-precision runtime greater depth estimation density estimation. resolution default \\(100   \\times 100\\) grid, basic examples may vary noticeably starting different random seeds.","code":""},{"path":"/reference/geom_bagplot.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Bagplots — geom_bagplot","text":"geom_bagplot() understands following aesthetics (required aesthetics bold): x y component linewidth linetype colour fill alpha shape stroke size group","code":""},{"path":[]},{"path":"/reference/geom_bagplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bagplots — geom_bagplot","text":"","code":"# Motor Trends base plot with factorized cylinder counts p <- mtcars %>%    transform(cyl = factor(cyl)) %>%    ggplot(aes(x = wt, y = disp)) +   theme_bw() # basic bagplot p + geom_bagplot()  # group by cylinder count p + geom_bagplot(   fraction = 0.4, coef = 1.2,   aes(fill = cyl, linetype = cyl, color = cyl) )  # using normally unmapped aesthetics p + geom_bagplot(   fraction = 0.4, coef = 1.2,   aes(fill = cyl, linetype = cyl, color = cyl),   median.color = \"black\",   fence.linetype = sync(), fence.colour = \"black\",   outlier.shape = \"asterisk\", outlier.colour = \"black\" )"},{"path":"/reference/geom_isoline.html","id":null,"dir":"Reference","previous_headings":"","what":"Isolines (contour lines) — geom_isoline","title":"Isolines (contour lines) — geom_isoline","text":"geom_isoline() renders isolines along row column axes.","code":""},{"path":"/reference/geom_isoline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Isolines (contour lines) — geom_isoline","text":"","code":"geom_isoline(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   isoline_text = TRUE,   by = NULL,   num = NULL,   text_dodge = 0.03,   ...,   text.size = 3,   text.angle = 0,   text.colour = NULL,   text.color = NULL,   text.alpha = NULL,   parse = FALSE,   check_overlap = FALSE,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"/reference/geom_isoline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Isolines (contour lines) — geom_isoline","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. isoline_text Logical; whether include text value marks along isolines. , num Intervals elements number elements; specify one. text_dodge Numeric; orthogonal distance text axis isoline, proportion minimum plot width height. ... Additional arguments passed ggplot2::layer(). text.size, text.angle, text.colour, text.color, text.alpha Default aesthetics tick mark labels. Set NULL inherit data's aesthetics. parse TRUE, labels parsed expressions displayed described ?plotmath. check_overlap TRUE, text overlaps previous text layer plotted. check_overlap happens draw time order data. Therefore data arranged label column calling geom_text(). Note argument supported geom_label(). na.rm Passed ggplot2::layer(). show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"/reference/geom_isoline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Isolines (contour lines) — geom_isoline","text":"ggproto layer.","code":""},{"path":"/reference/geom_isoline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Isolines (contour lines) — geom_isoline","text":"Isolines topographical features separate plot regions gradient interest falls within specified range. Greenacre (2010) uses effectively assist projection markers onto axes.","code":""},{"path":"/reference/geom_isoline.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Isolines (contour lines) — geom_isoline","text":"geom_isoline() understands following aesthetics (required aesthetics bold): x y colour alpha linewidth linetype center, scale hjust vjust family fontface group","code":""},{"path":"/reference/geom_isoline.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Isolines (contour lines) — geom_isoline","text":"Greenacre MJ (2010) Biplots Practice. Fundacion BBVA, ISBN: 978-84-923846. https://www.fbbva.es/microsite/multivariate-statistics/biplots.html","code":""},{"path":[]},{"path":"/reference/geom_isoline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Isolines (contour lines) — geom_isoline","text":"","code":"# stack loss gradient stackloss %>%    lm(formula = stack.loss ~ Air.Flow + Water.Temp + Acid.Conc.) %>%    coef() %>%    as.list() %>% as.data.frame() %>%    subset(select = c(Air.Flow, Water.Temp, Acid.Conc.)) ->   coef_data # isolines along strongest predictors scale(stackloss, scale = FALSE) %>%    ggplot(aes(x = Water.Temp, y = Air.Flow)) +   coord_square() +   geom_point(aes(size = stack.loss)) + scale_size_area() +   geom_isoline(data = coef_data)"},{"path":"/reference/geom_lineranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Intervals depicting ranges, usually about center points — geom_lineranges","title":"Intervals depicting ranges, usually about center points — geom_lineranges","text":"geom_lineranges() renders horizontal vertical intervals specified subject variable; geom_pointranges() additionally renders point crosshairs.","code":""},{"path":"/reference/geom_lineranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intervals depicting ranges, usually about center points — geom_lineranges","text":"","code":"geom_lineranges(   mapping = NULL,   data = NULL,   stat = \"center\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_pointranges(   mapping = NULL,   data = NULL,   stat = \"center\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"/reference/geom_lineranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intervals depicting ranges, usually about center points — geom_lineranges","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... Additional arguments passed ggplot2::layer(). na.rm Passed ggplot2::layer(). show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"/reference/geom_lineranges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Intervals depicting ranges, usually about center points — geom_lineranges","text":"ggproto layer.","code":""},{"path":"/reference/geom_lineranges.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Intervals depicting ranges, usually about center points — geom_lineranges","text":"geom_*ranges() layers shortcuts equivalently-specified pairs horizontal vertical ggplot2::geom_*range() layers. Rather ggplot2::stat_identity(), default stat_center(), practice summary values need manually passed.","code":""},{"path":"/reference/geom_lineranges.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Intervals depicting ranges, usually about center points — geom_lineranges","text":"geom_lineranges() geom_pointranges() understand following aesthetics (required aesthetics bold): x xmin xmax y ymin ymax` alpha colour linewidth linetype size group","code":""},{"path":[]},{"path":"/reference/geom_lineranges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Intervals depicting ranges, usually about center points — geom_lineranges","text":"","code":"ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +   geom_point(alpha = .25) +   geom_lineranges() #> No center function supplied; defaulting to `mean_se()` #> This message is displayed once per session.   if (require(Hmisc)) {   ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +     geom_point(alpha = .25) +     geom_pointranges(fun.data = mean_sdl, shape = \"circle open\") } #> Loading required package: Hmisc #>  #> Attaching package: ‘Hmisc’ #> The following objects are masked from ‘package:base’: #>  #>     format.pval, units   mpg %>%    aggregate(     x = cbind(displ, hwy) ~ 0,     FUN = function(z) c(min = min(z), med = median(z), max = max(z))   ) %>%    do.call(what = data.frame) %>%    ggplot(aes(displ.med, hwy.med)) +   geom_pointranges(     stat = \"identity\",     aes(xmin = displ.min, xmax = displ.max, ymin = hwy.min, ymax = hwy.max)   ) +   geom_point(data = mpg, aes(displ, hwy), alpha = .5)"},{"path":"/reference/geom_rule.html","id":null,"dir":"Reference","previous_headings":"","what":"Rulers through or offset from the origin — geom_rule","title":"Rulers through or offset from the origin — geom_rule","text":"geom_rule() renders segments orthogonally translated origin.","code":""},{"path":"/reference/geom_rule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rulers through or offset from the origin — geom_rule","text":"","code":"geom_rule(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   axis_labels = TRUE,   axis_ticks = TRUE,   axis_text = TRUE,   by = NULL,   num = NULL,   snap_rule = TRUE,   tick_length = 0.025,   text_dodge = 0.03,   label_dodge = 0.03,   ...,   axis.colour = NULL,   axis.color = NULL,   axis.alpha = NULL,   label.angle = 0,   label.colour = NULL,   label.color = NULL,   label.alpha = NULL,   tick.linewidth = 0.25,   tick.colour = NULL,   tick.color = NULL,   tick.alpha = NULL,   text.size = 2.6,   text.angle = 0,   text.hjust = 0.5,   text.vjust = 0.5,   text.family = NULL,   text.fontface = NULL,   text.colour = NULL,   text.color = NULL,   text.alpha = NULL,   parse = FALSE,   check_overlap = FALSE,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"/reference/geom_rule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rulers through or offset from the origin — geom_rule","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. axis_labels, axis_ticks, axis_text Logical; whether include labels, tick marks, text value marks along axes. , num Intervals elements number elements; specify one. snap_rule Logical; whether snap rule segments grid values. tick_length Numeric; length tick marks, proportion minimum plot width height. text_dodge Numeric; orthogonal distance tick mark text axis, proportion minimum plot width height. label_dodge Numeric; orthogonal distance axis label axis, proportion minimum plot width height. ... Additional arguments passed ggplot2::layer(). axis.colour, axis.color, axis.alpha Default aesthetics axes. Set NULL inherit data's aesthetics. label.angle, label.colour, label.color, label.alpha Default aesthetics labels. Set NULL inherit data's aesthetics. tick.linewidth, tick.colour, tick.color, tick.alpha Default aesthetics tick marks. Set NULL inherit data's aesthetics. text.size, text.angle, text.hjust, text.vjust, text.family, text.fontface, text.colour, text.color, text.alpha Default aesthetics tick mark labels. Set NULL inherit data's aesthetics. parse TRUE, labels parsed expressions displayed described ?plotmath. check_overlap TRUE, text overlaps previous text layer plotted. check_overlap happens draw time order data. Therefore data arranged label column calling geom_text(). Note argument supported geom_label(). na.rm Passed ggplot2::layer(). show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"/reference/geom_rule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rulers through or offset from the origin — geom_rule","text":"ggproto layer.","code":""},{"path":"/reference/geom_rule.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rulers through or offset from the origin — geom_rule","text":"implemented , rule just axis fixed range, usually limits data. geom_rule() defaults stat = \"identity\" avoid problem failing pass referent data referential stat_rule(). Therefore, user must provide lower upper aesthetics, used euclidean lengths plotting window. Meanwhile, stat_rule() defaults geom = \"rule\"; see stat_rule() details pairing.","code":""},{"path":"/reference/geom_rule.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Rulers through or offset from the origin — geom_rule","text":"geom_rule() understands following aesthetics (required aesthetics bold): x y lower upper yintercept xintercept xend yend linetype linewidth size hjust vjust colour alpha label family fontface center, scale group","code":""},{"path":[]},{"path":"/reference/geom_rule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rulers through or offset from the origin — geom_rule","text":"","code":"USJudgeRatings %>%    subset(select = -c(1, 12)) %>%    dist(method = \"maximum\") %>%    cmdscale() %>%    as.data.frame() %>%    setNames(c(\"PCo1\", \"PCo2\")) %>%    transform(name = rownames(USJudgeRatings)) ->   judge_mds USJudgeRatings %>%    subset(select = c(CONT, RTEN)) %>%    setNames(c(\"contacts\", \"recommendation\")) ->   judge_meta lm(as.matrix(judge_meta) ~ as.matrix(judge_mds[, seq(2)])) %>%    getElement(\"coefficients\") %>%    unname() %>% t() %>% as.data.frame() %>%    setNames(c(\"Intercept\", \"PCo1\", \"PCo2\")) %>%    transform(variable = names(judge_meta)) ->   judge_lm ggplot(judge_mds, aes(x = PCo1, y = PCo2)) +   coord_equal() +   theme_void() +   geom_text(aes(label = name), size = 3) +   stat_rule(     data = judge_lm, referent = judge_mds,     aes(center = Intercept, label = variable)   )"},{"path":"/reference/geom_text_radiate.html","id":null,"dir":"Reference","previous_headings":"","what":"Text radiating outward from the origin — geom_text_radiate","title":"Text radiating outward from the origin — geom_text_radiate","text":"geom_text_radiate() adapted ggbiplot() -CRAN extensions name (Vu, 2014; Telford, 2017; Gegzna, 2018). renders text specified positions angles radiate origin. layer associated ggproto deprecated.","code":""},{"path":"/reference/geom_text_radiate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Text radiating outward from the origin — geom_text_radiate","text":"","code":"geom_text_radiate(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   parse = FALSE,   check_overlap = FALSE,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"/reference/geom_text_radiate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Text radiating outward from the origin — geom_text_radiate","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. jointy specified nudge_x nudge_y. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). string nameing position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. parse TRUE, labels parsed expressions displayed described ?plotmath. check_overlap TRUE, text overlaps previous text layer plotted. check_overlap happens draw time order data. Therefore data arranged label column calling geom_text(). Note argument supported geom_label(). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"/reference/geom_text_radiate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Text radiating outward from the origin — geom_text_radiate","text":"ggproto layer.","code":""},{"path":"/reference/geom_text_radiate.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Text radiating outward from the origin — geom_text_radiate","text":"geom_text_radiate() understands following aesthetics (required aesthetics bold): x y label alpha angle colour family fontface hjust lineheight size vjust group","code":""},{"path":"/reference/geom_text_radiate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Text radiating outward from the origin — geom_text_radiate","text":"Vincent Q. Vu (2014). ggbiplot: 'ggplot2' based biplot. R package version 0.55. https://github.com/vqv/ggbiplot, experimental branch Richard J Telford (2017). ggbiplot: 'ggplot2' based biplot. R package version 0.6. https://github.com/richardjtelford/ggbiplot (fork), experimental branch Vilmantas Gegzna (2018). ggbiplot: 'ggplot2' based biplot. R package version 0.55. https://github.com/forked-packages/ggbiplot (fork), experimental branch","code":""},{"path":[]},{"path":"/reference/geom_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Vectors from the origin — geom_vector","title":"Vectors from the origin — geom_vector","text":"geom_vector() renders arrows origin points, optionally text radiating outward.","code":""},{"path":"/reference/geom_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vectors from the origin — geom_vector","text":"","code":"geom_vector(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   arrow = default_arrow,   lineend = \"round\",   linejoin = \"mitre\",   vector_labels = TRUE,   ...,   label.colour = NULL,   label.color = NULL,   label.alpha = NULL,   parse = FALSE,   check_overlap = FALSE,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"/reference/geom_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vectors from the origin — geom_vector","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. arrow Specification arrows, created grid::arrow(), else NULL arrows. lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). vector_labels Logical; whether include labels radiating outward vectors. ... Additional arguments passed ggplot2::layer(). label.colour, label.color, label.alpha Default aesthetics labels. Set NULL inherit data's aesthetics. parse TRUE, labels parsed expressions displayed described ?plotmath. check_overlap TRUE, text overlaps previous text layer plotted. check_overlap happens draw time order data. Therefore data arranged label column calling geom_text(). Note argument supported geom_label(). na.rm Passed ggplot2::layer(). show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"/reference/geom_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vectors from the origin — geom_vector","text":"ggproto layer.","code":""},{"path":"/reference/geom_vector.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Vectors from the origin — geom_vector","text":"Vectors positions relative common reference point, case origin; comprise direction magnitude. Vectors usually represented arrows rather markers (points). Vectors commonly used represent numerical variables biplots, Gabriel (1971) Greenacre (2010). Gardner & le Roux (2002) refer Gabriel biplots. layer, optional radiating text labels, adapted ggbiplot() -CRAN extensions name (Vu, 2014; Telford, 2017; Gegzna, 2018).","code":""},{"path":"/reference/geom_vector.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Vectors from the origin — geom_vector","text":"geom_vector() understands following aesthetics (required aesthetics bold): x y alpha colour linetype label size angle hjust vjust family fontface lineheight group","code":""},{"path":"/reference/geom_vector.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Vectors from the origin — geom_vector","text":"Gabriel KR (1971) \"biplot graphic display matrices application principal component analysis\". Biometrika 58(3), 453–467. doi:10.1093/biomet/58.3.453 Greenacre MJ (2010) Biplots Practice. Fundacion BBVA, ISBN: 978-84-923846. https://www.fbbva.es/microsite/multivariate-statistics/biplots.html Gardner S, le Roux N (2002) \"Biplot Methodology Discriminant Analysis Based upon Robust Methods Principal Curves\". Classification, Clustering, Data Analysis: Recent Advances Applications: 169–176. https://link.springer.com/chapter/10.1007/978-3-642-56181-8_18 Vincent Q. Vu (2014). ggbiplot: 'ggplot2' based biplot. R package version 0.55. https://github.com/vqv/ggbiplot, experimental branch Richard J Telford (2017). ggbiplot: 'ggplot2' based biplot. R package version 0.6. https://github.com/richardjtelford/ggbiplot (fork), experimental branch Vilmantas Gegzna (2018). ggbiplot: 'ggplot2' based biplot. R package version 0.55. https://github.com/forked-packages/ggbiplot (fork), experimental branch","code":""},{"path":[]},{"path":"/reference/geom_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vectors from the origin — geom_vector","text":"","code":"# multidimensional scaling of covariances ability.cov$cov %>%    cov2cor() %>%   eigen() %>% getElement(\"vectors\") %>%    as.data.frame() %>%    transform(test = rownames(ability.cov$cov)) ->   ability_cor_eigen ability_cor_eigen %>%    ggplot(aes(-V1, V2, label = test)) +   coord_square() + theme_void() +   geom_vector(check_overlap = TRUE) +   scale_y_continuous(expand = expansion(mult = .2)) +   ggtitle(\"Ability and intelligence test covariances\")  # multidimensional scaling of correlations ability.cov$cov %>%    eigen() %>% getElement(\"vectors\") %>%    as.data.frame() %>%    transform(test = rownames(ability.cov$cov)) ->   ability_cor_eigen ability_cor_eigen %>%    ggplot(aes(-V1, -V2, label = test)) +   coord_square() + theme_void() +   geom_vector(check_overlap = TRUE) +   expand_limits(x = c(-1, 1), y = c(-1, 1)) +   ggtitle(\"Ability and intelligence test covariances\")"},{"path":"/reference/gggda-ggproto.html","id":null,"dir":"Reference","previous_headings":"","what":"ggproto classes created and adapted for gggda — gggda-ggproto","title":"ggproto classes created and adapted for gggda — gggda-ggproto","text":"gggda introduces several ggproto classes coordinate systems, statistical transformations, geometric constructions specific multivariate analysis following geometric data analysis principles.","code":""},{"path":"/reference/gggda-ggproto.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ggproto classes created and adapted for gggda — gggda-ggproto","text":"new ggprotos inspired two entangled distinct threads multivariate data visualization: First, several geometric constructions proposed generalize numeric graphical summaries univariate data bivariate setting. Among various \"peeling\" procedures like successive convex hulls, generalize concept rank (Green, 1981); depth-based bag--bolster plot, designed bivariate analog box--whisker plot (Rousseeuw &al, 1999). Second, use biplots visualize singular value–decomposed data benefits able encode variables different graphical elements markers used encode cases—example, vectors (arrows emanating origin; Gabriel, 1971), calibrated axes (Gower & Hand, 1996), prediction regions (Gardner & le Roux, 2002).","code":""},{"path":"/reference/gggda-ggproto.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ggproto classes created and adapted for gggda — gggda-ggproto","text":"Green PJ (1981) \"Peeling Bivariate Data\". Interpreting Multivariate Data Chapter 1, 3–19. John Wiley & Sons, Ltd, ISBN 978-0-471-28039-2. Rousseeuw PJ, Ruts , & Tukey JW (1999) \"Bagplot: Bivariate Boxplot\". American Statistician, 53(4): 382–387. doi:10.1080/00031305.1999.10474494 Gabriel KR (1971) \"biplot graphic display matrices application principal component analysis\". Biometrika 58(3), 453–467. doi:10.1093/biomet/58.3.453 Gower JC & Hand DJ (1996) Biplots. Chapman & Hall, ISBN: 0-412-71630-5. Gardner S, le Roux N (2002) \"Biplot Methodology Discriminant Analysis Based upon Robust Methods Principal Curves\". Classification, Clustering, Data Analysis: Recent Advances Applications: 169–176. https://link.springer.com/chapter/10.1007/978-3-642-56181-8_18","code":""},{"path":[]},{"path":"/reference/gggda.html","id":null,"dir":"Reference","previous_headings":"","what":"gggda package — gggda","title":"gggda package — gggda","text":"ggplot2 extension multivariate geometric data analysis.","code":""},{"path":"/reference/gggda.html","id":"acknowledgments","dir":"Reference","previous_headings":"","what":"Acknowledgments","title":"gggda package — gggda","text":"package spun ordr. Many users identified problems suggested improvements. Development benefitted use equipment support colleagues UConn Health UF Health.","code":""},{"path":[]},{"path":"/reference/gggda.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gggda package — gggda","text":"Maintainer: Jason Cory Brunson cornelioid@gmail.com (ORCID) Authors: John Gracey jbgracey6@gmail.com contributors: Emily Paul erpb.71@gmail.com [contributor]","code":""},{"path":"/reference/peel_hulls.html","id":null,"dir":"Reference","previous_headings":"","what":"Bivariate data peelings — peel_hulls","title":"Bivariate data peelings — peel_hulls","text":"Use convex hulls (eventually peelings) order bivariate data.","code":""},{"path":"/reference/peel_hulls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bivariate data peelings — peel_hulls","text":"","code":"peel_hulls(   x,   y = NULL,   num = NULL,   by = 1L,   breaks = c(0.5),   cut = c(\"above\", \"below\") )"},{"path":"/reference/peel_hulls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bivariate data peelings — peel_hulls","text":"x, y coordinate vectors points. can specified two     vectors x y, 2-column matrix x, list     x two components, etc, see xy.coords. num positive integer; number hulls peel. Pass Inf hulls. positive integer; frequency include consecutive hulls, pairs num. breaks numeric vector fractions (0 1) data contain hull; overridden num. cut Character; one \"\" \"\", indicating whether hull contain least breaks data, respectively.","code":""},{"path":"/reference/peel_hulls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bivariate data peelings — peel_hulls","text":"matrix following columns: x,y original coordinates position input matrix vectors hull index hull, starting outermost frac value breaks used determine hull prop proportion data within hull","code":""},{"path":"/reference/peel_hulls.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bivariate data peelings — peel_hulls","text":"Methods peeling bivariate data concentric tiers generalize univariate concept rank separate core versus peripheral cases (Green, 1981). code peeling convex hulls adapted plothulls() aplpack package. peeling options implemented soon.","code":""},{"path":"/reference/peel_hulls.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bivariate data peelings — peel_hulls","text":"Green PJ (1981) \"Peeling Bivariate Data\". Interpreting Multivariate Data Chapter 1, 3–19. John Wiley & Sons, Ltd, ISBN 978-0-471-28039-2.","code":""},{"path":"/reference/peel_hulls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bivariate data peelings — peel_hulls","text":"","code":"x <- mtcars$disp; y <- mtcars$mpg  # all hulls peel_hulls(x, y, num = Inf) #>           x    y  i hull    prop #>  [1,] 400.0 19.2 25    1 0.71875 #>  [2,] 440.0 14.7 17    1 0.71875 #>  [3,] 472.0 10.4 15    1 0.71875 #>  [4,] 460.0 10.4 16    1 0.71875 #>  [5,] 167.6 17.8 11    1 0.71875 #>  [6,] 121.0 21.4 32    1 0.71875 #>  [7,] 108.0 22.8  3    1 0.71875 #>  [8,]  79.0 27.3 26    1 0.71875 #>  [9,]  71.1 33.9 20    1 0.71875 #> [10,] 360.0 18.7  5    2 0.46875 #> [11,] 360.0 14.3  7    2 0.46875 #> [12,] 350.0 13.3 24    2 0.46875 #> [13,] 275.8 15.2 14    2 0.46875 #> [14,] 145.0 19.7 30    2 0.46875 #> [15,] 120.1 21.5 21    2 0.46875 #> [16,]  75.7 30.4 19    2 0.46875 #> [17,]  78.7 32.4 18    2 0.46875 #> [18,] 258.0 21.4  4    3 0.25000 #> [19,] 351.0 15.8 29    3 0.25000 #> [20,] 301.0 15.0 31    3 0.25000 #> [21,] 167.6 19.2 10    3 0.25000 #> [22,] 140.8 22.8  9    3 0.25000 #> [23,] 120.3 26.0 27    3 0.25000 #> [24,]  95.1 30.4 28    3 0.25000 #> [25,] 318.0 15.5 22    4 0.09375 #> [26,] 304.0 15.2 23    4 0.09375 #> [27,] 225.0 18.1  6    4 0.09375 #> [28,] 160.0 21.0  2    4 0.09375 #> [29,] 146.7 24.4  8    4 0.09375 #> [30,] 275.8 17.3 13    5 0.00000 #> [31,] 275.8 16.4 12    5 0.00000 #> [32,] 160.0 21.0  1    5 0.00000  # every third hull peel_hulls(x, y, num = Inf, by = 3) #>           x    y  i hull    prop #>  [1,] 400.0 19.2 25    1 0.71875 #>  [2,] 440.0 14.7 17    1 0.71875 #>  [3,] 472.0 10.4 15    1 0.71875 #>  [4,] 460.0 10.4 16    1 0.71875 #>  [5,] 167.6 17.8 11    1 0.71875 #>  [6,] 121.0 21.4 32    1 0.71875 #>  [7,] 108.0 22.8  3    1 0.71875 #>  [8,]  79.0 27.3 26    1 0.71875 #>  [9,]  71.1 33.9 20    1 0.71875 #> [10,] 318.0 15.5 22    4 0.09375 #> [11,] 304.0 15.2 23    4 0.09375 #> [12,] 225.0 18.1  6    4 0.09375 #> [13,] 160.0 21.0  2    4 0.09375 #> [14,] 146.7 24.4  8    4 0.09375  # tertile hulls, cut below peel_hulls(x, y, breaks = seq(0, 1, length.out = 4)) #>           x    y  i hull      frac    prop #>  [1,] 400.0 19.2 25    1 1.0000000 1.00000 #>  [2,] 440.0 14.7 17    1 1.0000000 1.00000 #>  [3,] 472.0 10.4 15    1 1.0000000 1.00000 #>  [4,] 460.0 10.4 16    1 1.0000000 1.00000 #>  [5,] 167.6 17.8 11    1 1.0000000 1.00000 #>  [6,] 121.0 21.4 32    1 1.0000000 1.00000 #>  [7,] 108.0 22.8  3    1 1.0000000 1.00000 #>  [8,]  79.0 27.3 26    1 1.0000000 1.00000 #>  [9,]  71.1 33.9 20    1 1.0000000 1.00000 #> [10,] 360.0 18.7  5    2 0.6666667 0.71875 #> [11,] 360.0 14.3  7    2 0.6666667 0.71875 #> [12,] 350.0 13.3 24    2 0.6666667 0.71875 #> [13,] 275.8 15.2 14    2 0.6666667 0.71875 #> [14,] 145.0 19.7 30    2 0.6666667 0.71875 #> [15,] 120.1 21.5 21    2 0.6666667 0.71875 #> [16,]  75.7 30.4 19    2 0.6666667 0.71875 #> [17,]  78.7 32.4 18    2 0.6666667 0.71875 #> [18,] 258.0 21.4  4    3 0.3333333 0.46875 #> [19,] 351.0 15.8 29    3 0.3333333 0.46875 #> [20,] 301.0 15.0 31    3 0.3333333 0.46875 #> [21,] 167.6 19.2 10    3 0.3333333 0.46875 #> [22,] 140.8 22.8  9    3 0.3333333 0.46875 #> [23,] 120.3 26.0 27    3 0.3333333 0.46875 #> [24,]  95.1 30.4 28    3 0.3333333 0.46875 #> [25,] 275.8 17.3 13    5 0.0000000 0.09375 #> [26,] 275.8 16.4 12    5 0.0000000 0.09375 #> [27,] 160.0 21.0  1    5 0.0000000 0.09375  # tertile hulls, cut above peel_hulls(x, y, breaks = seq(0, 1, length.out = 4), cut = \"below\") #>           x    y  i hull      frac    prop #>  [1,] 400.0 19.2 25    1 1.0000000 1.00000 #>  [2,] 440.0 14.7 17    1 1.0000000 1.00000 #>  [3,] 472.0 10.4 15    1 1.0000000 1.00000 #>  [4,] 460.0 10.4 16    1 1.0000000 1.00000 #>  [5,] 167.6 17.8 11    1 1.0000000 1.00000 #>  [6,] 121.0 21.4 32    1 1.0000000 1.00000 #>  [7,] 108.0 22.8  3    1 1.0000000 1.00000 #>  [8,]  79.0 27.3 26    1 1.0000000 1.00000 #>  [9,]  71.1 33.9 20    1 1.0000000 1.00000 #> [10,] 258.0 21.4  4    3 0.6666667 0.46875 #> [11,] 351.0 15.8 29    3 0.6666667 0.46875 #> [12,] 301.0 15.0 31    3 0.6666667 0.46875 #> [13,] 167.6 19.2 10    3 0.6666667 0.46875 #> [14,] 140.8 22.8  9    3 0.6666667 0.46875 #> [15,] 120.3 26.0 27    3 0.6666667 0.46875 #> [16,]  95.1 30.4 28    3 0.6666667 0.46875 #> [17,] 318.0 15.5 10    4 0.3333333 0.25000 #> [18,] 304.0 15.2 12    4 0.3333333 0.25000 #> [19,] 225.0 18.1  4    4 0.3333333 0.25000 #> [20,] 160.0 21.0  2    4 0.3333333 0.25000 #> [21,] 146.7 24.4  6    4 0.3333333 0.25000"},{"path":"/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. magrittr %>%","code":""},{"path":"/reference/stat_bagplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Bagplots — stat_bagplot","title":"Bagplots — stat_bagplot","text":"Construct medians, bags, fences, outlier specifications bagplots.","code":""},{"path":"/reference/stat_bagplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bagplots — stat_bagplot","text":"","code":"stat_bagplot(   mapping = NULL,   data = NULL,   geom = \"bagplot\",   position = \"identity\",   fraction = 0.5,   coef = 3,   median = TRUE,   fence = TRUE,   outliers = TRUE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"/reference/stat_bagplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bagplots — stat_bagplot","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. fraction Fraction data include bag. coef Scale factor fence relative bag. median, fence, outliers Logical indicators whether include median, fence, outliers composite output. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... Arguments passed stat_depth notion Character; name depth function (passed ddalpha::depth.()). notion_params List additional parameters passed via ... ddalpha::depth.().","code":""},{"path":"/reference/stat_bagplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bagplots — stat_bagplot","text":"ggproto layer.","code":""},{"path":"/reference/stat_bagplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bagplots — stat_bagplot","text":"bagplot comprises single, often filled, depth contour (\"bag\") overlaid hull union data points contained scaled expansion depth median (\"fence\") scatterplot outliers beyond fence (\"loop\"). Rousseeuw &al (1999) suggest term \"bag--bolster plot\" evocative \"box--whisker plot\". depth median can obtained using stat_center(), data depth values used compute also used demarcate bag, implemented separately StatBagplot$compute_group() efficiency. stat_bagplot() designed pair geom_bagplot(), analogously pairing ggplot2::stat_boxplot() ggplot2::geom_boxplot(). particular, GeomBagplot ggproto recognizes computed variable component, used StatBagplot separate data four bagplot elements.","code":""},{"path":"/reference/stat_bagplot.html","id":"multidimensional-position-aesthetics","dir":"Reference","previous_headings":"","what":"Multidimensional position aesthetics","title":"Bagplots — stat_bagplot","text":"statistical transformation compatible convenience function aes_coord(). transformations (e.g. stat_center()) commute projection lower (1 2)-dimensional biplot space. detect aesthetics form ..coord[0-9]+, ..coord1 ..coord2 converted x y remaining ignored. transformations (e.g. stat_spantree()) yield different results lower-dimensional biplot computed versus projection. stat layer detects aesthetics, transformation performed projection, results first two dimensions returned x y. small number transformations (stat_rule()) incompatible aesthetics accept aes_coord() without warning.","code":""},{"path":"/reference/stat_bagplot.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Bagplots — stat_bagplot","text":"calculated statistical transformation can accessed delayed evaluation. component component composite plot; used internally","code":""},{"path":"/reference/stat_bagplot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bagplots — stat_bagplot","text":"Rousseeuw PJ, Ruts , & Tukey JW (1999) \"Bagplot: Bivariate Boxplot\". American Statistician, 53(4): 382–387. doi:10.1080/00031305.1999.10474494","code":""},{"path":[]},{"path":"/reference/stat_bagplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bagplots — stat_bagplot","text":"","code":"# petroleum rock base plot p <- ggplot(rock, aes(area, shape, size = peri)) + theme_bw() # scatterplot p + geom_point()  # NB: Non-standard aesthetics are handled as in version > 3.5.1; see: # https://github.com/tidyverse/ggplot2/issues/6191 # custom bag fraction, coefficient, and aesthetics p + stat_bagplot(fraction = .4, coef = 1.5,                  outlier_gp = list(shape = \"asterisk\")) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> Warning: The following aesthetics were dropped during statistical transformation: size. #> ℹ This can happen when ggplot fails to infer the correct grouping structure in #>   the data. #> ℹ Did you forget to specify a `group` aesthetic or to convert a numerical #>   variable into a factor?  # invisible fence p + stat_bagplot(fence = FALSE) #> Warning: The following aesthetics were dropped during statistical transformation: size. #> ℹ This can happen when ggplot fails to infer the correct grouping structure in #>   the data. #> ℹ Did you forget to specify a `group` aesthetic or to convert a numerical #>   variable into a factor?"},{"path":"/reference/stat_center.html","id":null,"dir":"Reference","previous_headings":"","what":"Centers and spreads for bivariate data — stat_center","title":"Centers and spreads for bivariate data — stat_center","text":"Centers spreads bivariate data","code":""},{"path":"/reference/stat_center.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Centers and spreads for bivariate data — stat_center","text":"","code":"stat_center(   mapping = NULL,   data = NULL,   geom = \"point\",   position = \"identity\",   show.legend = NA,   inherit.aes = TRUE,   ...,   fun.data = NULL,   fun = NULL,   fun.center = NULL,   fun.min = NULL,   fun.max = NULL,   fun.ord = NULL,   fun.args = list() )  stat_star(   mapping = NULL,   data = NULL,   geom = \"segment\",   position = \"identity\",   show.legend = NA,   inherit.aes = TRUE,   ...,   fun.data = NULL,   fun = NULL,   fun.center = NULL,   fun.ord = NULL,   fun.args = list() )"},{"path":"/reference/stat_center.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Centers and spreads for bivariate data — stat_center","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... Additional arguments passed ggplot2::layer(). fun.data function given complete data return data frame variables ymin, y, ymax. fun.center Deprecated alias fun. fun.min, fun, fun.max Alternatively, supply three individual functions passed vector values return single number. fun.ord Alternatively ggplot2::stat_summary_bin() parameters, supply summary function takes matrix input returns named column summary vector. Overridden fun.data fun, used together fun.min fun.max. fun.args Optional additional arguments passed functions.","code":""},{"path":"/reference/stat_center.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Centers and spreads for bivariate data — stat_center","text":"ggproto layer.","code":""},{"path":"/reference/stat_center.html","id":"multidimensional-position-aesthetics","dir":"Reference","previous_headings":"","what":"Multidimensional position aesthetics","title":"Centers and spreads for bivariate data — stat_center","text":"statistical transformation compatible convenience function aes_coord(). transformations (e.g. stat_center()) commute projection lower (1 2)-dimensional biplot space. detect aesthetics form ..coord[0-9]+, ..coord1 ..coord2 converted x y remaining ignored. transformations (e.g. stat_spantree()) yield different results lower-dimensional biplot computed versus projection. stat layer detects aesthetics, transformation performed projection, results first two dimensions returned x y. small number transformations (stat_rule()) incompatible aesthetics accept aes_coord() without warning.","code":""},{"path":"/reference/stat_center.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Centers and spreads for bivariate data — stat_center","text":"calculated statistical transformation can accessed delayed evaluation. xmin,ymin,xmax,ymax results fun.min,fun.max applied x,y","code":""},{"path":[]},{"path":"/reference/stat_center.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Centers and spreads for bivariate data — stat_center","text":"","code":"ggplot(mpg, aes(x = displ, y = cty, shape = drv)) +   geom_point() +   stat_center(fun = \"median\", size = 5, alpha = .5)   ggplot(mpg, aes(x = displ, y = cty, shape = drv, linetype = drv)) +   stat_center(size = 3) +   stat_star()"},{"path":"/reference/stat_chull.html","id":null,"dir":"Reference","previous_headings":"","what":"Convex hulls and hull peelings — stat_chull","title":"Convex hulls and hull peelings — stat_chull","text":"Restrict planar data boundary points convex hull, nested convex hulls containing specified fractions points.","code":""},{"path":"/reference/stat_chull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convex hulls and hull peelings — stat_chull","text":"","code":"stat_chull(   mapping = NULL,   data = NULL,   geom = \"polygon\",   position = \"identity\",   show.legend = NA,   inherit.aes = TRUE,   ... )  stat_peel(   mapping = NULL,   data = NULL,   geom = \"polygon\",   position = \"identity\",   num = NULL,   by = 1L,   breaks = c(0.5),   cut = c(\"above\", \"below\"),   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"/reference/stat_chull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convex hulls and hull peelings — stat_chull","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... Additional arguments passed ggplot2::layer(). num positive integer; number hulls peel. Pass Inf hulls. positive integer; frequency include consecutive hulls, pairs num. breaks numeric vector fractions (0 1) data contain hull; overridden num. cut Character; one \"\" \"\", indicating whether hull contain least breaks data, respectively.","code":""},{"path":"/reference/stat_chull.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convex hulls and hull peelings — stat_chull","text":"ggproto layer.","code":""},{"path":"/reference/stat_chull.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convex hulls and hull peelings — stat_chull","text":"used ggplot2 vignette, stat_chull() restricts dataset x y variables points lie convex hull. Building , stat_peel() returns hulls convex hull peeling: subset sequentially removed hulls containing specified fractions data.","code":""},{"path":"/reference/stat_chull.html","id":"multidimensional-position-aesthetics","dir":"Reference","previous_headings":"","what":"Multidimensional position aesthetics","title":"Convex hulls and hull peelings — stat_chull","text":"statistical transformation compatible convenience function aes_coord(). transformations (e.g. stat_center()) commute projection lower (1 2)-dimensional biplot space. detect aesthetics form ..coord[0-9]+, ..coord1 ..coord2 converted x y remaining ignored. transformations (e.g. stat_spantree()) yield different results lower-dimensional biplot computed versus projection. stat layer detects aesthetics, transformation performed projection, results first two dimensions returned x y. small number transformations (stat_rule()) incompatible aesthetics accept aes_coord() without warning.","code":""},{"path":"/reference/stat_chull.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Convex hulls and hull peelings — stat_chull","text":"calculated statistical transformation can accessed delayed evaluation. hull position breaks defines hull frac value breaks defines hull prop actual proportion data within hull","code":""},{"path":"/reference/stat_chull.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convex hulls and hull peelings — stat_chull","text":"Barnett V (1976) \"Ordering Multivariate Data\". Journal Royal Statistical Society: Series (General), 139(3): 318–344. doi:10.2307/2344839","code":""},{"path":[]},{"path":"/reference/stat_chull.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convex hulls and hull peelings — stat_chull","text":"","code":"ggplot(USJudgeRatings, aes(x = INTG, y = PREP)) +   geom_point() +   stat_chull(alpha = .5)  ggplot(USJudgeRatings, aes(x = INTG, y = PREP)) +   stat_peel(     aes(alpha = after_stat(hull)),     breaks = seq(.1, .9, .2)   ) #> Warning: Using alpha for a discrete variable is not advised.  ggplot(USJudgeRatings, aes(x = INTG, y = PREP)) +   stat_peel(     aes(alpha = after_stat(hull)),     num = 6, by = 2, color = \"black\"   ) #> Warning: Using alpha for a discrete variable is not advised.   # specify fractions of points ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) +   stat_peel(aes(fill = Species, alpha = after_stat(frac)),             breaks = seq(.1, .9, .2)) +   scale_alpha_continuous(trans = scales::reverse_trans()) +   geom_point()  # specify number of peels ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) +   stat_peel(fill = \"transparent\", num = 3) +   geom_point()  # mapping to opacity overrides transparency ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) +   stat_peel(aes(alpha = after_stat(hull)), fill = \"transparent\", num = 3) +   geom_point() #> Warning: Using alpha for a discrete variable is not advised."},{"path":"/reference/stat_cone.html","id":null,"dir":"Reference","previous_headings":"","what":"Conical hull — stat_cone","title":"Conical hull — stat_cone","text":"Restrict planar data points lie conical hull.","code":""},{"path":"/reference/stat_cone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conical hull — stat_cone","text":"","code":"stat_cone(   mapping = NULL,   data = NULL,   geom = \"path\",   position = \"identity\",   origin = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"/reference/stat_cone.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conical hull — stat_cone","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. origin Logical; whether include origin transformed data. Defaults FALSE. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... Additional arguments passed ggplot2::layer().","code":""},{"path":"/reference/stat_cone.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conical hull — stat_cone","text":"ggproto layer.","code":""},{"path":"/reference/stat_cone.html","id":"multidimensional-position-aesthetics","dir":"Reference","previous_headings":"","what":"Multidimensional position aesthetics","title":"Conical hull — stat_cone","text":"statistical transformation compatible convenience function aes_coord(). transformations (e.g. stat_center()) commute projection lower (1 2)-dimensional biplot space. detect aesthetics form ..coord[0-9]+, ..coord1 ..coord2 converted x y remaining ignored. transformations (e.g. stat_spantree()) yield different results lower-dimensional biplot computed versus projection. stat layer detects aesthetics, transformation performed projection, results first two dimensions returned x y. small number transformations (stat_rule()) incompatible aesthetics accept aes_coord() without warning.","code":""},{"path":[]},{"path":"/reference/stat_cone.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conical hull — stat_cone","text":"","code":"mtcars$name <- rownames(mtcars) ggplot(mtcars, aes(wt, mpg, label = name)) +   geom_text(size = 3) +   stat_cone()  ggplot(mtcars, aes(hp, mpg, label = name)) +   geom_text(size = 3) +   stat_cone(origin = TRUE, linetype = \"dotted\")"},{"path":"/reference/stat_depth.html","id":null,"dir":"Reference","previous_headings":"","what":"Depth estimates and contours — stat_depth","title":"Depth estimates and contours — stat_depth","text":"Estimate data depth using ddalpha::depth.().","code":""},{"path":"/reference/stat_depth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Depth estimates and contours — stat_depth","text":"","code":"stat_depth(   mapping = NULL,   data = NULL,   geom = \"contour\",   position = \"identity\",   contour = TRUE,   contour_var = \"depth\",   notion = \"zonoid\",   notion_params = list(),   n = 100L,   show.legend = NA,   inherit.aes = TRUE,   ... )  stat_depth_filled(   mapping = NULL,   data = NULL,   geom = \"contour_filled\",   position = \"identity\",   contour = TRUE,   contour_var = \"depth\",   notion = \"zonoid\",   notion_params = list(),   n = 100L,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"/reference/stat_depth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Depth estimates and contours — stat_depth","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. contour TRUE, contour results depth estimation. contour_var Character string identifying variable contour . Can one \"depth\" \"ndepth\". See section computed variables details. notion Character; name depth function (passed ddalpha::depth.()). notion_params List additional parameters passed via ... ddalpha::depth.(). n Number grid points direction. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... Arguments passed ggplot2::geom_contour bins Number contour bins. Overridden breaks. binwidth width contour bins. Overridden bins. breaks One : Numeric vector set contour breaks function takes range data binwidth input returns breaks output. function can created formula (e.g. ~ fullseq(.x, .y)). Overrides binwidth bins. default, vector length ten pretty() breaks.","code":""},{"path":"/reference/stat_depth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Depth estimates and contours — stat_depth","text":"ggproto layer.","code":""},{"path":"/reference/stat_depth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Depth estimates and contours — stat_depth","text":"Depth extension univariate notion rank bivariate (sometimes multivariate) data (Rousseeuw &al, 1999). comes several flavors basis bagplots. stat_depth() adapted ggplot2::stat_density_2d() returns depth values grid format, neatly paired ggplot2::geom_contour().","code":""},{"path":"/reference/stat_depth.html","id":"multidimensional-position-aesthetics","dir":"Reference","previous_headings":"","what":"Multidimensional position aesthetics","title":"Depth estimates and contours — stat_depth","text":"statistical transformation compatible convenience function aes_coord(). transformations (e.g. stat_center()) commute projection lower (1 2)-dimensional biplot space. detect aesthetics form ..coord[0-9]+, ..coord1 ..coord2 converted x y remaining ignored. transformations (e.g. stat_spantree()) yield different results lower-dimensional biplot computed versus projection. stat layer detects aesthetics, transformation performed projection, results first two dimensions returned x y. small number transformations (stat_rule()) incompatible aesthetics accept aes_coord() without warning.","code":""},{"path":"/reference/stat_depth.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Depth estimates and contours — stat_depth","text":"calculated statistical transformation can accessed delayed evaluation. stat_depth() stat_depth_filled() compute different variables depending whether contouring turned . contouring (contour = FALSE), stats behave , following variables provided: depth depth estimate ndepth depth estimate, scaled maximum 1 contouring (contour = TRUE), either ggplot2::stat_contour() ggplot2::stat_contour_filled() run depth estimate obtained, computed variables determined stats.","code":""},{"path":"/reference/stat_depth.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Depth estimates and contours — stat_depth","text":"Rousseeuw PJ, Ruts , & Tukey JW (1999) \"Bagplot: Bivariate Boxplot\". American Statistician, 53(4): 382–387. doi:10.1080/00031305.1999.10474494","code":""},{"path":[]},{"path":"/reference/stat_depth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Depth estimates and contours — stat_depth","text":"","code":"# base Motor Trends plot b <- ggplot(mtcars, aes(wt, disp)) + geom_point()  # depth raster b + geom_raster(stat = \"depth\", aes(fill = after_stat(depth)))  # depth grid b + stat_depth(   geom = \"point\", contour = FALSE,   aes(size = after_stat(depth)), n = 20 )   # depth contours b + geom_contour(stat = \"depth\", contour = TRUE)  # depth bands b + geom_contour_filled(stat = \"depth_filled\", contour = TRUE, alpha = .75)  # contours colored by group b + stat_depth(aes(color = factor(cyl)))  # custom depth notion b + stat_depth(   aes(color = factor(cyl)),   notion = \"halfspace\", notion_params = list(exact = TRUE) )   # contours faceted by group b + stat_depth_filled(alpha = .75) +   facet_wrap(facets = vars(factor(cyl)))  # scaled to the unit interval b + stat_depth_filled(contour_var = \"ndepth\", alpha = .75) +   facet_wrap(facets = vars(factor(cyl)))"},{"path":"/reference/stat_referent.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformations with respect to reference data — stat_referent","title":"Transformations with respect to reference data — stat_referent","text":"Compute statistics respect reference data set shared positional variables.","code":""},{"path":"/reference/stat_referent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformations with respect to reference data — stat_referent","text":"","code":"stat_referent(   mapping = NULL,   data = NULL,   geom = \"blank\",   position = \"identity\",   referent = NULL,   show.legend = NA,   inherit.aes = TRUE,   ... )  # S3 method for class 'LayerRef' ggplot_add(object, plot, ...)"},{"path":"/reference/stat_referent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transformations with respect to reference data — stat_referent","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. referent reference data set; see Details. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... Additional arguments passed ggplot2::layer(). object object add plot plot ggplot object add object ","code":""},{"path":"/reference/stat_referent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transformations with respect to reference data — stat_referent","text":"ggproto layer.","code":""},{"path":"/reference/stat_referent.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transformations with respect to reference data — stat_referent","text":"Often geometric data analysis statistical transformation applied data \\(X\\) also depend data \\(Y\\), example drawing projections vectors \\(X\\) onto vectors \\(Y\\). stat layer stat_referent() accepts \\(Y\\) argument referent parameter pre-processes using existing positional aesthetic mappings x y. ggproto can used parent elaborate statistical transformations, stat can paired geoms expect referent parameter use position transformations \\(X\\). pairs default [ggplot2::geom_blank()] prevent possibly confusing output.","code":""},{"path":"/reference/stat_referent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transformations with respect to reference data — stat_referent","text":"","code":"# simplify the Motor Trends data to two predictors legible at aspect ratio 1 mtcars %>%   transform(hp00 = hp/100) %>%   subset(select = c(mpg, hp00, wt)) ->   subcars # compute the gradient of `mpg` against these two predictors lm(mpg ~ hp00 + wt, subcars) %>%   coefficients() %>%   as.list() %>% as.data.frame() ->   grad # use the gradient as a reference (to no effect in this basic ggproto) ggplot(subcars, aes(x = hp00, y = wt)) +   coord_equal() +   geom_point() +   stat_referent(referent = grad)  ggplot(subcars, aes(x = hp00, y = wt)) +   coord_equal() +   stat_referent(geom = \"point\", referent = grad)"},{"path":"/reference/stat_rule.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct limited rules offset from the origin — stat_rule","title":"Construct limited rules offset from the origin — stat_rule","text":"Determine axis limits offset vectors reference data.","code":""},{"path":"/reference/stat_rule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct limited rules offset from the origin — stat_rule","text":"","code":"stat_rule(   mapping = NULL,   data = NULL,   geom = \"rule\",   position = \"identity\",   fun.lower = \"minpp\",   fun.upper = \"maxpp\",   fun.offset = \"minabspp\",   fun.args = list(),   referent = NULL,   show.legend = NA,   inherit.aes = TRUE,   ... )  minpp(x, p = 0.1)  maxpp(x, p = 0.1)  minabspp(x, p = 0.1)"},{"path":"/reference/stat_rule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct limited rules offset from the origin — stat_rule","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. fun.lower, fun.upper, fun.offset Functions used determine limits rules translations axes projections referent onto axes onto normal vectors. fun.args Optional additional arguments passed functions. referent reference data set; see Details. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... Additional arguments passed ggplot2::layer(). x numeric vector. p numeric value; proportion range used buffer.","code":""},{"path":"/reference/stat_rule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct limited rules offset from the origin — stat_rule","text":"ggproto layer.","code":""},{"path":"/reference/stat_rule.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct limited rules offset from the origin — stat_rule","text":"Biplots several axes can become cluttered illegible. happens, Gower, Gardner–Lubbe, & le Roux (2011) recommend translate axes new point intersection away origin, adjusting axis markers accordingly. axes converge region plot offset position markers elements. alternative solution, implemented bipl5 package (https://github.com/RuanBuys/bipl5), translate axis orthogonally away origin, preserves axis markers. technique implemented . Separately, axes fill plotting window uninformative exceed range plotted position markers projected onto . may even misinformative, suggesting linear relationships extrapolate outside data range. cases, Gower Harding (1988) recommend using finite ranges determined data projection onto axis. Three functions control operations: fun.offset computes orthogonal distance axis origin, fun.lower fun.upper compute distance along axis endpoints (offset) origin. functions depend position data offset limited , must passed manually referent parameter.","code":""},{"path":"/reference/stat_rule.html","id":"referential-stats","dir":"Reference","previous_headings":"","what":"Referential stats","title":"Construct limited rules offset from the origin — stat_rule","text":"statistical transformation done respect reference data passed referent (ignored NULL, default, possibly resulting empty output). See stat_referent() details. relies sleight hand new undocumented LayerRef class associated ggplot2::ggplot_add() method. result, layers constructed using stat_*() shortcut pass necessary positional aesthetics $setup_params() step, making available pre-process referent data. biplot shortcuts automatically substitute complementary matrix factor referent = NULL use integer vector select subset factor. uses require mapping passage.","code":""},{"path":"/reference/stat_rule.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Construct limited rules offset from the origin — stat_rule","text":"calculated statistical transformation can accessed delayed evaluation. axis unique axis identifier (integer) lower,upper distances endpoints origin (offset) yintercept,xintercept intercepts (possibly Inf) offset axis","code":""},{"path":"/reference/stat_rule.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Construct limited rules offset from the origin — stat_rule","text":"Gower JC, Gardner–Lubbe S, & le Roux NJ (2011) Understanding Biplots. Wiley, ISBN: 978-0-470-01255-0. https://www.wiley.com/go/biplots Gower JC & Harding SA (1988) \"Nonlinear biplots\". Biometrika 75(3): 445–455. doi:10.1093/biomet/75.3.445","code":""},{"path":[]},{"path":"/reference/stat_rule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct limited rules offset from the origin — stat_rule","text":"","code":"# stack loss gradient stackloss %>%    lm(formula = stack.loss ~ Air.Flow + Water.Temp + Acid.Conc.) %>%    coef() %>%    as.list() %>% as.data.frame() %>%    subset(select = c(Air.Flow, Water.Temp, Acid.Conc.)) ->   coef_data # gradient rule with respect to two predictors stackloss_centered <- scale(stackloss, scale = FALSE) stackloss_centered %>%    ggplot(aes(x = Acid.Conc., y = Air.Flow)) +   coord_square() +   geom_point(aes(size = stack.loss, alpha = sign(stack.loss))) +    scale_size_area() + scale_alpha_binned(breaks = c(-1, 0, 1)) +   stat_rule(     geom = \"axis\",     data = coef_data,     referent = stackloss_centered,     fun.offset = function(x) minabspp(x, p = .5)   )"},{"path":"/reference/stat_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiply artificial coordinates by a scale factor — stat_scale","title":"Multiply artificial coordinates by a scale factor — stat_scale","text":"simple stat applies constant scale factor positional coordinates. can handy tandem secondary axes.","code":""},{"path":"/reference/stat_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiply artificial coordinates by a scale factor — stat_scale","text":"","code":"stat_scale(   mapping = NULL,   data = NULL,   geom = \"point\",   position = \"identity\",   show.legend = NA,   inherit.aes = TRUE,   ...,   mult = 1 )"},{"path":"/reference/stat_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiply artificial coordinates by a scale factor — stat_scale","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... Additional arguments passed ggplot2::layer(). mult Numeric value used scale coordinates.","code":""},{"path":"/reference/stat_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiply artificial coordinates by a scale factor — stat_scale","text":"ggproto layer.","code":""},{"path":"/reference/stat_scale.html","id":"multidimensional-position-aesthetics","dir":"Reference","previous_headings":"","what":"Multidimensional position aesthetics","title":"Multiply artificial coordinates by a scale factor — stat_scale","text":"statistical transformation compatible convenience function aes_coord(). transformations (e.g. stat_center()) commute projection lower (1 2)-dimensional biplot space. detect aesthetics form ..coord[0-9]+, ..coord1 ..coord2 converted x y remaining ignored. transformations (e.g. stat_spantree()) yield different results lower-dimensional biplot computed versus projection. stat layer detects aesthetics, transformation performed projection, results first two dimensions returned x y. small number transformations (stat_rule()) incompatible aesthetics accept aes_coord() without warning.","code":""},{"path":[]},{"path":"/reference/stat_spantree.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a minimum spanning tree among cases or variables — stat_spantree","title":"Calculate a minimum spanning tree among cases or variables — stat_spantree","text":"stat layer identifies \\(n-1\\) pairs among \\(n\\) points form minimum spanning tree, calculates segments poirs two dimensions x y.","code":""},{"path":"/reference/stat_spantree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a minimum spanning tree among cases or variables — stat_spantree","text":"","code":"stat_spantree(   mapping = NULL,   data = NULL,   geom = \"segment\",   position = \"identity\",   engine = \"mlpack\",   method = \"euclidean\",   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"/reference/stat_spantree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a minimum spanning tree among cases or variables — stat_spantree","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. engine single character string specifying package implementation use; \"mlpack\", \"vegan\", \"ade4\". method Passed stats::dist() engine \"vegan\" \"ade4\", ignored \"mlpack\". show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... Additional arguments passed ggplot2::layer().","code":""},{"path":"/reference/stat_spantree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a minimum spanning tree among cases or variables — stat_spantree","text":"ggproto layer.","code":""},{"path":"/reference/stat_spantree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate a minimum spanning tree among cases or variables — stat_spantree","text":"minimum spanning tree (MST) point cloud \\(X\\) minimal connected graph \\(X\\) smallest possible sum distances (dissimilarities) linked points. layers call stats::dist() calculate distance/dissimilarity object engine mlpack, vegan, ade4 calculate MST. result formatted position aesthetics readable ggplot2::geom_segment(). MST calculated x y reflects distances among points \\(X\\) reduced-dimension plane biplot. contrast, one calculated full set coordinates reflects distances higher-dimensional space. Plotting high-dimensional MST 2-dimensional biplot provides visual cue faithfully two dimensions can encapsulate \"true\" distances points (Jolliffe, 2002).","code":""},{"path":"/reference/stat_spantree.html","id":"multidimensional-position-aesthetics","dir":"Reference","previous_headings":"","what":"Multidimensional position aesthetics","title":"Calculate a minimum spanning tree among cases or variables — stat_spantree","text":"statistical transformation compatible convenience function aes_coord(). transformations (e.g. stat_center()) commute projection lower (1 2)-dimensional biplot space. detect aesthetics form ..coord[0-9]+, ..coord1 ..coord2 converted x y remaining ignored. transformations (e.g. stat_spantree()) yield different results lower-dimensional biplot computed versus projection. stat layer detects aesthetics, transformation performed projection, results first two dimensions returned x y. small number transformations (stat_rule()) incompatible aesthetics accept aes_coord() without warning.","code":""},{"path":"/reference/stat_spantree.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Calculate a minimum spanning tree among cases or variables — stat_spantree","text":"calculated statistical transformation can accessed delayed evaluation. xend,yend,x,y endpoints tree branches (segments)","code":""},{"path":"/reference/stat_spantree.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate a minimum spanning tree among cases or variables — stat_spantree","text":"Jolliffe (2002) Principal Component Analysis, Second Edition. Springer Series Statistics, ISSN 0172-7397. doi:10.1007/b98835  https://link.springer.com/book/10.1007/b98835","code":""},{"path":[]},{"path":"/reference/stat_spantree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate a minimum spanning tree among cases or variables — stat_spantree","text":"","code":"eurodist %>%    cmdscale(k = 6) %>%    as.data.frame() %>%    tibble::rownames_to_column(var = \"city\") ->   euro_mds ggplot(euro_mds, aes(V1, V2, label = city)) +   stat_spantree() +   geom_label(alpha = .25) #> Warning: Package {mlpack} not installed; using {vegan} instead. #> This warning is displayed once every 8 hours.  ggplot(euro_mds, aes_c(aes_coord(euro_mds, \"V\"), aes(label = city))) +   stat_spantree() +   geom_label(aes(x = V1, y = V2), alpha = .25)"},{"path":"/reference/sync.html","id":null,"dir":"Reference","previous_headings":"","what":"A synchronization flag — sync","title":"A synchronization flag — sync","text":"inert function sync() operates analogously ggplot2::waiver() indicate auxiliary aesthetic synchronized standard aesthetic (mapped data). .sync() reports whether object class.","code":""},{"path":"/reference/sync.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A synchronization flag — sync","text":"","code":"sync()  is.sync(x)"},{"path":"/reference/sync.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A synchronization flag — sync","text":"x object test","code":""},{"path":"/reference/sync.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A synchronization flag — sync","text":"sync() returns empty list \"sync\" class; .sync() returns logical value whether x inherits class.","code":""},{"path":"/news/index.html","id":"gggda-011","dir":"Changelog","previous_headings":"","what":"gggda 0.1.1","title":"gggda 0.1.1","text":"patch fixes bug peel stat adds unit tests scale stat. resolve outstanding CRAN checks, cross-reference {ordr} replaced URL {dplyr} {tidyr} functions previously called using double-colon operator imported instead.","code":""},{"path":"/news/index.html","id":"gggda-010","dir":"Changelog","previous_headings":"","what":"gggda 0.1.0","title":"gggda 0.1.0","text":"CRAN release: 2025-07-09 inaugural version {gggda} spun post-v0.1.1 development version {ordr}. Upgrades {ordr} components since release included {gggda} listed .","code":""},{"path":[]},{"path":"/news/index.html","id":"unit-tests-0-1-0","dir":"Changelog","previous_headings":"infrastructure and standards","what":"unit tests","title":"gggda 0.1.0","text":"Unit tests written ggproto shortcuts.","code":""},{"path":[]},{"path":"/news/index.html","id":"gda-geared-coordinate-systems-0-1-0","dir":"Changelog","previous_headings":"new coordinate systems","what":"GDA-geared coordinate systems","title":"gggda 0.1.0","text":"Two new coordinate systems provide control aspect ratio plotting window without compromising (artificial) coordinate axes: GeomRect (alias GeomSquare) extends GeomFixed window_ratio parameter plotting window, GeomBiplot removes ratio parameter forces coordinate axes aspect ratio 1.","code":""},{"path":[]},{"path":"/news/index.html","id":"combined-vector-and-radiating-text-geom-breaking-change-0-1-0","dir":"Changelog","previous_headings":"up( or down)grades to existing plot layers","what":"combined vector and radiating text geom (breaking change)","title":"gggda 0.1.0","text":"‘vector’ ‘text_radiate’ geoms combined. shortcut geom_text_radiate() deprecated, geom_vector() generates radiating labels default.","code":""},{"path":"/news/index.html","id":"debugged-axis-geom-0-1-0","dir":"Changelog","previous_headings":"up( or down)grades to existing plot layers","what":"debugged axis geom","title":"gggda 0.1.0","text":"‘axis’ ‘isoline’ geoms hit trouble one points lay origin (x^2 + y^2 == 0). cases now removed setup_data().","code":""},{"path":"/news/index.html","id":"reconciliation-of-summary-functions-0-1-0","dir":"Changelog","previous_headings":"up( or down)grades to existing plot layers","what":"reconciliation of summary functions","title":"gggda 0.1.0","text":"‘center’ ‘star’ stats now follow ‘summary’ stat convention using fun, fun.center deprecated. Additionally, fun.ord accepts function summarizes columns matrix, accommodates summaries like depth median decompose along orthogonal axes.","code":""},{"path":"/news/index.html","id":"revamped-handling-of-secondary-aesthetics-breaking-change-0-1-0","dir":"Changelog","previous_headings":"up( or down)grades to existing plot layers","what":"revamped handling of secondary aesthetics (breaking change)","title":"gggda 0.1.0","text":"Previously, underscore-separated parameters like label_colour used specify secondary aesthetics, .e. aesthetics graphical objects considered “primary” layer. behavior debugged mimicking use period-separated parameters like label.colour {ggplot2} v3.5.1, except new bagplot geom, behavior based geom_boxplot() current development version {ggplot2}. induces breaking changes due renaming , removal , parameters.","code":""},{"path":"/news/index.html","id":"deprecation-of-scale-stat-0-1-0","dir":"Changelog","previous_headings":"up( or down)grades to existing plot layers","what":"deprecation of scale stat","title":"gggda 0.1.0","text":"simple experimental StatScale deprecated.","code":""},{"path":[]},{"path":"/news/index.html","id":"referential-stats-0-1-0","dir":"Changelog","previous_headings":"new plot layers","what":"referential stats","title":"gggda 0.1.0","text":"new statistical transformation serves parent specific “referential stats”, meaning depend non-inherited (setting, positional) data transform inherited data. reference data passed new referent parameter. new stat coupled additional LayerRef class enables ggplot_add() pass inherited positional aesthetics $setup_params(). Biplot-specific stat_*_*() shortcuts accept additional argument types referent result opposite matrix factor used reference data.","code":""},{"path":"/news/index.html","id":"rule-stat-0-1-0","dir":"Changelog","previous_headings":"new plot layers","what":"rule stat","title":"gggda 0.1.0","text":"new ‘rule’ statistical transformation computes additional position aesthetics ‘axis’ geom uses limit offset axes. stat referential expects set functions compute limits lower upper along axes yintercept xintercept associated offset axes. ‘axis’ geom preprocesses aesthetics rule endpoints xmin,ymin,xmax,ymax offset vectors xend,yend force plotting window contain limited axis segments , axes remain lines, offsets centered.","code":""},{"path":"/news/index.html","id":"peel-stat-0-1-0","dir":"Changelog","previous_headings":"new plot layers","what":"peel stat","title":"gggda 0.1.0","text":"new ‘peel’ statistical transformation computes nested convex hulls containing specified fractions data.","code":""},{"path":"/news/index.html","id":"depth-stat-0-1-0","dir":"Changelog","previous_headings":"new plot layers","what":"depth stat","title":"gggda 0.1.0","text":"new ‘depth’ statistical transformation estimates depth across grid paired GeomContour produce depth contours, can used plot alpha bags.","code":""},{"path":"/news/index.html","id":"adapted-density-stat--geom-0-1-0","dir":"Changelog","previous_headings":"new plot layers","what":"adapted density stat & geom","title":"gggda 0.1.0","text":"Aided element standardization, classic density_2d statistical transformation geometric construction adapted biplots. Currently, source code generation respect fixed parameters passed layer() stat_*() geom_*() shortcuts; consequence, contour = TRUE must manually passed geom_*_density_2d().","code":""}]
