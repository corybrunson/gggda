% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods-stats-factanal.r
\name{methods-factanal}
\alias{methods-factanal}
\alias{as_tbl_ord.factanal}
\alias{recover_rows.factanal}
\alias{recover_cols.factanal}
\alias{recover_inertia.factanal}
\alias{recover_coord.factanal}
\alias{recover_conference.factanal}
\alias{supplementation_rows.factanal}
\alias{augmentation_rows.factanal}
\alias{augmentation_cols.factanal}
\alias{augmentation_coord.factanal}
\title{Functionality for factor analysis ('factanal') objects}
\usage{
\method{as_tbl_ord}{factanal}(x)

\method{recover_rows}{factanal}(x)

\method{recover_cols}{factanal}(x)

\method{recover_inertia}{factanal}(x)

\method{recover_coord}{factanal}(x)

\method{recover_conference}{factanal}(x)

\method{supplementation_rows}{factanal}(x)

\method{augmentation_rows}{factanal}(x)

\method{augmentation_cols}{factanal}(x)

\method{augmentation_coord}{factanal}(x)
}
\arguments{
\item{x}{An ordination object.}
}
\description{
These methods extract data from, and attribute new data to,
objects of class \code{"factanal"} as returned by \code{\link[stats:factanal]{stats::factanal()}}.
}
\details{
Factor analysis of a data matrix relies on an an eigendecomposition of its
correlation matrix, whose eigenvectors (up to weighting) comprise the
variable loadings. For this reason, both row and column accessors retrieve
the loadings and inertia is evenly distributed between them. When computed
and returned by \code{\link[stats:factanal]{stats::factanal()}}, the case scores are accessible as
supplementary elements. Redistribution of inertia commutes through both
score calculations.
}
\examples{
# data frame of Swiss fertility and socioeconomic indicators
class(swiss)
head(swiss)
# perform factor analysis
swiss_fa <- factanal(~ ., factors = 2L, data = swiss, scores = "regression")
# wrap as a 'tbl_ord' object
(swiss_fa <- as_tbl_ord(swiss_fa))
# recover loadings
get_rows(swiss_fa, elements = "active")
get_cols(swiss_fa)
# recover scores
head(get_rows(swiss_fa, elements = "supplementary"))
# augment column loadings with uniquenesses
(swiss_fa <- augment_ord(swiss_fa))
# symmetric biplot
swiss_fa \%>\%
  ggbiplot() +
  theme_bw() +
  geom_cols_vector(aes(color = .uniqueness)) +
  geom_cols_text_radiate(aes(label = .name)) +
  expand_limits(x = c(-2, 2.5), y = c(-1.5, 2))
# row-standard biplot with loadings in standard coordinates and regression
# scores overlaid
swiss_fa \%>\%
  confer_inertia("rows") \%>\%
  ggbiplot(aes(label = .name), elements = "supplementary") +
  theme_bw() +
  geom_cols_vector() +
  geom_cols_text_radiate() +
  geom_unit_circle() +
  geom_rows_point()
}
\seealso{
Other methods for eigen-decomposition-based techniques: 
\code{\link{methods-cmds}},
\code{\link{methods-eigen}}
}
\concept{methods for eigen-decomposition-based techniques}
