% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fun-wrap.r
\name{wrap-ord}
\alias{wrap-ord}
\alias{eigen_ord}
\alias{svd_ord}
\alias{cmdscale_ord}
\title{Wrappers for lossy ordination methods}
\usage{
eigen_ord(x, symmetric = isSymmetric.matrix(x))

svd_ord(x, nu = min(dim(x)), nv = min(dim(x)))

cmdscale_ord(d, k = 2, add = FALSE)
}
\arguments{
\item{x}{a numeric or complex matrix whose spectral decomposition is to
    be computed.  Logical matrices are coerced to numeric.}

\item{symmetric}{if \code{TRUE}, the matrix is assumed to be symmetric
    (or Hermitian if complex) and only its lower triangle (diagonal
    included) is used.  If \code{symmetric} is not specified,
    \code{\link[base]{isSymmetric}(x)} is used.}

\item{nu}{the number of left  singular vectors to be computed.
    This must between \code{0} and \code{n = nrow(x)}.}

\item{nv}{the number of right singular vectors to be computed.
    This must be between \code{0} and \code{p = ncol(x)}.}

\item{d}{a distance structure such as that returned by \code{dist}
    or a full symmetric matrix containing the dissimilarities.}

\item{k}{the maximum dimension of the space which the data are to be
    represented in; must be in \eqn{\{1, 2, \ldots, n-1\}}{{1, 2, \\dots, n-1}}.}

\item{add}{logical indicating if an additive constant \eqn{c*} should
    be computed, and added to the non-diagonal dissimilarities such that
    the modified dissimilarities are Euclidean.}
}
\description{
These \verb{*_ord} functions wrap core R functions with modifications
for use with '\link{tbl_ord}' methods. Some parameters are hidden from the user
and set to settings required for these methods, some matrix outputs are
given row or column names to be used by them, and new '*_ord' S3 class
attributes are added to enable them.
}
\details{
The following table summarizes the wrapped functions:\tabular{llll}{
   Original function \tab Hide params \tab Add names \tab New class \cr
   \code{\link[base:eigen]{base::eigen()}} \tab Yes \tab Yes \tab Yes \cr
   \code{\link[base:svd]{base::svd()}} \tab Yes \tab Yes \tab Yes \cr
   \code{\link[stats:cmdscale]{stats::cmdscale()}} \tab Yes \tab No \tab Yes \cr
}
}
\examples{
glass_banias <- subset(
  glass,
  Context == "L.15;B.166",
  select = c("SiO2", "Na2O", "CaO", "Al2O3", "MgO", "K2O")
)
# eigendecomposition of a covariance matrix
(glass_cov <- cov(glass_banias))
eigen_ord(glass_cov)
# singular value decomposition of a data matrix
svd_ord(glass_banias)
# classical multidimensional scaling of a distance matrix
cmdscale_ord(dist(glass_banias))
}
